[
    {
        "displayText": "audio.dispose()",
        "type": "function",
        "snippet": "audio.dispose( audioHandle )",
        "description": "Releases audio memory associated with the handle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/dispose.html"
    },
    {
        "displayText": "audio.fade()",
        "type": "function",
        "snippet": "audio.fade( [ { [channel=c] [, time=t] [, volume=v ] } ] )",
        "description": "This fades a playing sound in a specified amount to a specified volume. The audio will continue playing after the fade completes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/fade.html"
    },
    {
        "displayText": "audio.fadeOut()",
        "type": "function",
        "snippet": "audio.fadeOut( [ { [channel=c] [, time=t] } ] )",
        "description": "This stops a playing sound in a specified amount of time and fades to min volume while doing it. The audio will stop at the end of the time and the channel will be freed.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/fadeOut.html"
    },
    {
        "displayText": "audio.findFreeChannel()",
        "type": "function",
        "snippet": "audio.findFreeChannel( [ startChannel ] )",
        "description": "Looks for an available audio channel for playback. You can provide a start channel number as parameter and begin searching from that channel, increasing upward to the highest channel. The search does not include reserved channels.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/findFreeChannel.html"
    },
    {
        "displayText": "audio.getDuration()",
        "type": "function",
        "snippet": "audio.getDuration( audioHandle )",
        "description": "This function returns the total time in milliseconds of the audio resource. If the total length cannot be determined, -1 will be returned.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/getDuration.html"
    },
    {
        "displayText": "audio.getMaxVolume()",
        "type": "function",
        "snippet": "audio.getMaxVolume( { channel=c } )",
        "description": "Gets the max volume for a specific channel. There is no max volume for the master volume.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/getMaxVolume.html"
    },
    {
        "displayText": "audio.getMinVolume()",
        "type": "function",
        "snippet": "audio.getMinVolume( { channel=c } )",
        "description": "Gets the minimum volume for a specific channel. There is no minimum volume for the master volume.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/getMinVolume.html"
    },
    {
        "displayText": "audio.getVolume()",
        "type": "function",
        "snippet": "audio.getVolume( { channel=c } )",
        "description": "Gets the volume for a specific channel, or gets the master volume.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/getVolume.html"
    },
    {
        "displayText": "audio.isChannelActive()",
        "type": "function",
        "snippet": "audio.isChannelActive( channel )",
        "description": "Returns true if the specified channel is currently playing or paused; false if otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/isChannelActive.html"
    },
    {
        "displayText": "audio.isChannelPaused()",
        "type": "function",
        "snippet": "audio.isChannelPaused( channel )",
        "description": "Returns true if the specified channel is currently paused; false if not.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/isChannelPaused.html"
    },
    {
        "displayText": "audio.isChannelPlaying()",
        "type": "function",
        "snippet": "audio.isChannelPlaying( channel )",
        "description": "Returns true if the specified channel is currently playing; false if otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/isChannelPlaying.html"
    },
    {
        "displayText": "audio.loadSound()",
        "type": "function",
        "snippet": "audio.loadSound( audiofileName [, baseDir ]  )",
        "description": "Loads an entire file completely into memory and returns a reference to the audio data. Files that are loaded completely into memory may be reused\/played\/shared simultaneously on multiple channels so you only need to load one instance of the file. You should use this to load all your short sounds, especially ones you may play frequently. For best results, load all the sounds at the launch of your app or the start of a new level\/scene.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/loadSound.html"
    },
    {
        "displayText": "audio.loadStream()",
        "type": "function",
        "snippet": "audio.loadStream( audioFileName [, baseDir ]  )",
        "description": "Loads (opens) a file to be read as a stream. Streamed files are read in little chunks at a time to minimize memory use. These are intended for large\/long files like background music and speech. Unlike files loaded with audio.loadSound(), these cannot be shared simultaneously across multiple channels. If you need to play multiple simulataneous instances of the same file, you must load multiple instances of the file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/loadStream.html"
    },
    {
        "displayText": "audio.pause()",
        "type": "function",
        "snippet": "audio.pause( [channel] )",
        "description": "Pauses playback on a channel (or all channels if no channels are specified). Has no effect on channels that aren't playing.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/pause.html"
    },
    {
        "displayText": "audio.play()",
        "type": "function",
        "snippet": "audio.play( audioHandle [, options ] )",
        "description": "Plays the audio specified by the audio handle on a channel. If a channel is not explicitly specified, an available channel will be automatically chosen for you.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/play.html"
    },
    {
        "displayText": "audio.reserveChannels()",
        "type": "function",
        "snippet": "audio.reserveChannels( channels )",
        "description": "Allows you to reserve a certain number of channels so they won't be automatically assigned to play on. This function blocks off the lower number channels up to the number you specify so they won't be automatically assigned to be played on when you call various play functions.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/reserveChannels.html"
    },
    {
        "displayText": "audio.resume()",
        "type": "function",
        "snippet": "audio.resume( [channel] )",
        "description": "Resumes playback on a channel that is paused (or all channels if no channel is specified). Should have no effect on channels that aren't paused.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/resume.html"
    },
    {
        "displayText": "audio.rewind()",
        "type": "function",
        "snippet": "audio.rewind( [audioHandle | options] )",
        "description": "Rewinds audio to the beginning position on either an active channel or directly on the audio handle (rewinds all channels if no arguments are specified).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/rewind.html"
    },
    {
        "displayText": "audio.seek()",
        "type": "function",
        "snippet": "audio.seek( time [, audioHandle ] [, options ] )",
        "description": "Seeks to a time position on either an active channel or directly on the audio handle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/seek.html"
    },
    {
        "displayText": "audio.setMaxVolume()",
        "type": "function",
        "snippet": "audio.setMaxVolume( volume, options )",
        "description": "Clamps the maximum volume to the set value. Any volumes that exceed the value will be played at the maximum volume level.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/setMaxVolume.html"
    },
    {
        "displayText": "audio.setMinVolume()",
        "type": "function",
        "snippet": "audio.setMinVolume( volume, options )",
        "description": "Clamps the minimum volume to the set value. Any volumes that fall below the value will be played at the minimum volume level.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/setMinVolume.html"
    },
    {
        "displayText": "audio.setVolume()",
        "type": "function",
        "snippet": "audio.setVolume( volume [, options ] )",
        "description": "Sets the volume either for a specific channel or sets the master volume.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/setVolume.html"
    },
    {
        "displayText": "audio.stop()",
        "type": "function",
        "snippet": "audio.stop( [channel] )",
        "description": "Stops playback on a channel (or all channels) and clears the channel(s) so they can be played on again. Callbacks will still be invoked, but the completed flag will be set to false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/stop.html"
    },
    {
        "displayText": "audio.stopWithDelay()",
        "type": "function",
        "snippet": "audio.stopWithDelay( duration [, options ] )",
        "description": "Stops a currently playing sound after the specified time delay.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/stopWithDelay.html"
    },
    {
        "displayText": "composer.getScene()",
        "type": "function",
        "snippet": "composer.getScene( sceneName )",
        "description": "Returns the specified scene object, as returned from composer.newScene(). Returns nil if the scene object does not exist. This function is useful for getting a reference to a specific scene object \u2014 for instance, if the current scene needs access to a specific function that's attached to another scene.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/getScene.html"
    },
    {
        "displayText": "composer.getSceneName()",
        "type": "function",
        "snippet": "composer.getSceneName( sceneType )",
        "description": "Returns the current, previous, or overlay scene name as a string. This can then be used with composer.gotoScene() or composer.removeScene().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/getSceneName.html"
    },
    {
        "displayText": "composer.getVariable()",
        "type": "function",
        "snippet": "composer.getVariable( variableName )",
        "description": "This function retrieves the value of a variable (from within the Composer object) that you previously set via composer.setVariable().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/getVariable.html"
    },
    {
        "displayText": "composer.gotoScene()",
        "type": "function",
        "snippet": "composer.gotoScene( sceneName [, options] )",
        "description": "This function is used to transition to a specific scene. When called, the hide event is dispatched to the current scene (if\u00a0one\u00a0exists). If a self.view group does not already exist for the specified target scene, the create event will be dispatched to that scene, then the show event will be dispatched.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/gotoScene.html"
    },
    {
        "displayText": "composer.hideOverlay()",
        "type": "function",
        "snippet": "composer.hideOverlay( [recycleOnly] [, effect] [, time] )",
        "description": "This function hides\/removes the current overlay scene (see composer.showOverlay()), if one is being displayed.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/hideOverlay.html"
    },
    {
        "displayText": "composer.loadScene()",
        "type": "function",
        "snippet": "composer.loadScene( sceneName [, doNotLoadView] [, params] )",
        "description": "Loads the specified scene, hidden behind the current scene, without initiating a scene transition. This function is similar to composer.gotoScene(), but it does not change the currently active scene. Only the create event will be dispatched on the scene, assuming its self.view does not already exist.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/loadScene.html"
    },
    {
        "displayText": "composer.newScene()",
        "type": "function",
        "snippet": "composer.newScene( ccscene )",
        "description": "This function creates new scene objects which can be used with the Composer Library, or references scenes created within the Composer GUI.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/newScene.html"
    },
    {
        "displayText": "composer.removeHidden()",
        "type": "function",
        "snippet": "composer.removeHidden( shouldRecycle )",
        "description": "This function removes (or optionally recycles) all scenes except for the currently active scene. A destroy event is first dispatched to all of these scenes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/removeHidden.html"
    },
    {
        "displayText": "composer.removeScene()",
        "type": "function",
        "snippet": "composer.removeScene( sceneName, shouldRecycle )",
        "description": "This function removes the specified scene (or optionally recycles it). A destroy event is first dispatched to the scene.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/removeScene.html"
    },
    {
        "displayText": "composer.setVariable()",
        "type": "function",
        "snippet": "composer.setVariable( variableName, value )",
        "description": "This function sets a variable (within the Composer module) which you can access from any other scene via composer.getVariable().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/setVariable.html"
    },
    {
        "displayText": "composer.showOverlay()",
        "type": "function",
        "snippet": "composer.showOverlay( sceneName [, options] )",
        "description": "This function loads an overlay scene above the currently active scene (the parent scene), leaving the parent scene intact.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/showOverlay.html"
    },
    {
        "displayText": "crypto.digest()",
        "type": "function",
        "snippet": "crypto.digest( algorithm, data [, raw] )",
        "description": "Generates the message digest (the hash) of the input string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/crypto\/digest.html"
    },
    {
        "displayText": "crypto.hmac()",
        "type": "function",
        "snippet": "crypto.hmac( algorithm, data, key [, raw] )",
        "description": "Computes HMAC (Key-Hashing for Message Authentication Code) of the string and returns it.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/crypto\/hmac.html"
    },
    {
        "displayText": "display.capture()",
        "type": "function",
        "snippet": "display.capture( displayObject, options )",
        "description": "This function is the same as display.save(), but it returns a display object instead of saving to a file by default. You can optionally save the capture to the device's photo library, but this is not the default action \u2014 you must explicitly tell it to do so when calling the function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/capture.html"
    },
    {
        "displayText": "display.captureBounds()",
        "type": "function",
        "snippet": "display.captureBounds( screenBounds [, saveToAlbum ] )",
        "description": "Captures a portion of the screen and returns it as a new DisplayObject. You can specify what portion of the screen to capture by passing in rectangular bounds. You can optionally save the capture image as a file to the device's photo library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/captureBounds.html"
    },
    {
        "displayText": "display.captureScreen()",
        "type": "function",
        "snippet": "display.captureScreen( [saveToAlbum] )",
        "description": "Captures the contents of the screen and returns it as a new display object. You can optionally save the capture as a file to the device's photo library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/captureScreen.html"
    },
    {
        "displayText": "display.colorSample()",
        "type": "function",
        "snippet": "display.colorSample( x, y, listener )",
        "description": "Get the color of a pixel on screen.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/colorSample.html"
    },
    {
        "displayText": "display.getCurrentStage()",
        "type": "function",
        "snippet": "display.getCurrentStage()",
        "description": "Returns a reference to the current stage object, which is the parent group for all display objects and groups. Currently, Corona has a single stage instance, so this function always returns a reference to the same object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/getCurrentStage.html"
    },
    {
        "displayText": "display.getDefault()",
        "type": "function",
        "snippet": "display.getDefault( key )",
        "description": "Get default display values including default colors for display objects, anchor point defaults, texture wrapping settings, etc.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/getDefault.html"
    },
    {
        "displayText": "display.loadRemoteImage()",
        "type": "function",
        "snippet": "display.loadRemoteImage( url, method, listener [, params], destFilename [, baseDir] [, x, y] )",
        "description": "This a convenience method, similar to network.download(), which returns a display\u00a0object containing the image, as well as saving the image to a file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/loadRemoteImage.html"
    },
    {
        "displayText": "display.newCircle()",
        "type": "function",
        "snippet": "display.newCircle( xCenter, yCenter, radius )\ndisplay.newCircle( parent, xCenter, yCenter, radius )",
        "description": "Creates a circle with radius radius centered at specified coordinates (xCenter, yCenter). The local origin is at the center of the circle and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newCircle.html"
    },
    {
        "displayText": "display.newContainer()",
        "type": "function",
        "snippet": "display.newContainer( [parent, ] width, height )",
        "description": "Containers are a special kind of group in which the children are clipped (masked) by the bounds of the container.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newContainer.html"
    },
    {
        "displayText": "display.newEmbossedText()",
        "type": "function",
        "snippet": "display.newEmbossedText( { options } )",
        "description": "Creates an embossed text object. The local origin is at the center of the text and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newEmbossedText.html"
    },
    {
        "displayText": "display.newEmitter()",
        "type": "function",
        "snippet": "display.newEmitter( emitterParams )",
        "description": "This function is used to create an EmitterObject, used to display particle effects created with Particle Designer.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newEmitter.html"
    },
    {
        "displayText": "display.newGroup()",
        "type": "function",
        "snippet": "display.newGroup()",
        "description": "Creates a group in which you can add and remove child display objects. Initially, there are no children in a group. The local origin is at the parent's origin; the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newGroup.html"
    },
    {
        "displayText": "display.newImage()",
        "type": "function",
        "snippet": "display.newImage( [parent,] filename [,baseDir] [,x,y] [,isFullResolution])",
        "description": "Displays an image on the screen from a file (supports tinting via object:setFillColor). The local origin is at the center of the image and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newImage.html"
    },
    {
        "displayText": "display.newImageRect()",
        "type": "function",
        "snippet": "display.newImageRect( [parent,] filename, [baseDir,] width, height )",
        "description": "Displays an image on the screen from a file (supports tinting via object:setFillColor). The local origin is at the center of the image and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newImageRect.html"
    },
    {
        "displayText": "display.newLine()",
        "type": "function",
        "snippet": "display.newLine( [parentGroup,] x1, y1, x2, y2 [, x3, y3, ... ] )",
        "description": "Draw a line from one point to another. Optionally, you may append points to the end of the line to create outline shapes or paths.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newLine.html"
    },
    {
        "displayText": "display.newPolygon()",
        "type": "function",
        "snippet": "display.newPolygon( x, y, vertices )\ndisplay.newPolygon( parent, x, y, vertices )",
        "description": "Draws a polygon shape by providing the outline (contour) of the shape. This includes convex or concave shapes. Self-intersecting shapes, however, are not supported and will result in undefined behavior.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newPolygon.html"
    },
    {
        "displayText": "display.newRect()",
        "type": "function",
        "snippet": "display.newRect( x, y, width, height )\n\ndisplay.newRect( parent, x, y, width, height )",
        "description": "Creates a rectangle object. The local origin is at the center of the rectangle and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newRect.html"
    },
    {
        "displayText": "display.newRoundedRect()",
        "type": "function",
        "snippet": "display.newRoundedRect( x, y, width, height, cornerRadius )\n\ndisplay.newRoundedRect( parent, x, y, width, height, cornerRadius )",
        "description": "Creates a rounded rectangle object. The corners are rounded by quarter circles of a specified radius value. The local origin is at the center of the rectangle and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newRoundedRect.html"
    },
    {
        "displayText": "display.newSnapshot()",
        "type": "function",
        "snippet": "display.newSnapshot( w, h )\n\ndisplay.newSnapshot( parent, w, h )",
        "description": "Snapshot objects let you capture a group of display objects and render them into a flattened image. The image is defined by objects that are added to the snapshot's group property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newSnapshot.html"
    },
    {
        "displayText": "display.newSprite()",
        "type": "function",
        "snippet": "display.newSprite( imageSheet, sequenceData )\n\ndisplay.newSprite( parent, imageSheet, sequenceData )",
        "description": "Creates a sprite object. Sprites allow for animated sequences of frames that reside on image\u00a0sheets. Please see the Sprite Animation and Image Sheets guides for more information.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newSprite.html"
    },
    {
        "displayText": "display.newText()",
        "type": "function",
        "snippet": "display.newText( options )",
        "description": "Creates a text object. The local origin is at the center of the text and the anchor point is initialized to this local origin.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/newText.html"
    },
    {
        "displayText": "display.remove()",
        "type": "function",
        "snippet": "display.remove( object )",
        "description": "Removes a group or object if not nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/remove.html"
    },
    {
        "displayText": "display.save()",
        "type": "function",
        "snippet": "display.save( displayObject, options )",
        "description": "Renders the display object referenced by first argument into a JPEG or PNG image and saves it as a new file. The display object must currently be in the display hierarchy or no image will be saved. If the object is a display group, all children are also rendered.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/save.html"
    },
    {
        "displayText": "display.setDefault()",
        "type": "function",
        "snippet": "display.setDefault( key, value )\n\ndisplay.setDefault( key, r, g, b, alpha )\n\ndisplay.setDefault( key, r, g, b )\n\ndisplay.setDefault( key, gray )\n\ndisplay.setDefault( key, gray, alpha )",
        "description": "Set default display values including default colors for display objects, anchor point defaults, texture wrapping settings, etc.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/setDefault.html"
    },
    {
        "displayText": "display.setDrawMode()",
        "type": "function",
        "snippet": "display.setDrawMode( key, value )",
        "description": "Sets the draw mode.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/setDrawMode.html"
    },
    {
        "displayText": "display.setStatusBar()",
        "type": "function",
        "snippet": "display.setStatusBar( mode )",
        "description": "Hides or changes the appearance of the status bar on most devices.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/setStatusBar.html"
    },
    {
        "displayText": "assert()",
        "type": "function",
        "snippet": "assert( v [, message] )",
        "description": "Issues an error and aborts the program when the value of its first argument is false (i.e. nil or false). Otherwise, it returns all its arguments.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/assert.html"
    },
    {
        "displayText": "collectgarbage()",
        "type": "function",
        "snippet": "collectgarbage( [opt [, arg]] )",
        "description": "A generic interface to Lua's garbage collector. Using this function is not required because Lua has automatic garbage collection features.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/collectgarbage.html"
    },
    {
        "displayText": "error()",
        "type": "function",
        "snippet": "error( message [, level] )",
        "description": "Terminates the last protected function called (see: pcall()) and returns the first argument as the error message.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/error.html"
    },
    {
        "displayText": "getfenv()",
        "type": "function",
        "snippet": "getfenv( [f] )",
        "description": "Returns the current environment in use by a specified Function. The first argument can be a Function or a Number that specifies the function at that stack level: level 1 is the function calling getfenv(). If the given function is not a Lua function, or if f is 0, getfenv() returns the global environment. The default for f is 1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/getfenv.html"
    },
    {
        "displayText": "getmetatable()",
        "type": "function",
        "snippet": "getmetatable( object )",
        "description": "Gets the metatable of a specified Table. If the table does not have a metatable, it returns nil. Otherwise, if the object's metatable has a __metatable field, it returns the associated value. Otherwise, it returns the metatable of the given table.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/getmetatable.html"
    },
    {
        "displayText": "ipairs()",
        "type": "function",
        "snippet": "ipairs( t )",
        "description": "This function returns three values: an iteration Function, a Table, and 0. For example, the following construction will iterate over the pairs (1,t[1]), (2,t[2]), ..., up to the first integer key absent from the table.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/ipairs.html"
    },
    {
        "displayText": "next()",
        "type": "function",
        "snippet": "next( array [, index] )",
        "description": "Allows a program to traverse all fields of an Array. next() returns the next index of the array and its associated value. When called with nil as its second argument, next() returns an initial index and its associated value. When called with the last index, or with nil in an empty array, next() returns nil. If the second argument is absent, then it is interpreted as nil. In particular, you can use next(t) to check whether an array is empty.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/next.html"
    },
    {
        "displayText": "pairs()",
        "type": "function",
        "snippet": "pairs( t )",
        "description": "Returns three values: the next function, a table, or nil. So, the following construction will iterate over all key-value pairs of table t.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/pairs.html"
    },
    {
        "displayText": "pcall()",
        "type": "function",
        "snippet": "pcall( f [, ...] )",
        "description": "Calls a function specified as the first argument, with the given arguments (as the following arguments) in protected mode. This means that any error inside f is not propagated; instead, pcall() catches the error and returns a status code. Its first result is the status code (a Boolean), which is true if the call succeeds without errors. In such case, pcall() also returns all results from the call, after this first result. In case of any error, pcall() returns false plus the error message.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/pcall.html"
    },
    {
        "displayText": "print()",
        "type": "function",
        "snippet": "print( ... )",
        "description": "Receives any number of arguments and prints their values to stdout (Corona Simulator Console, Xcode, ADB, etc.) using the tostring() function which converts them to strings. print() is not intended for formatted output, but rather as a quick way to show a value, typically for debugging. For formatted output, use string.format.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/print.html"
    },
    {
        "displayText": "rawequal()",
        "type": "function",
        "snippet": "rawequal( value1, value2 )",
        "description": "Performs an equality (==) check between two values without invoking a metamethod. Returns a Boolean.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/rawequal.html"
    },
    {
        "displayText": "rawget()",
        "type": "function",
        "snippet": "rawget( table, index )",
        "description": "Gets the real value of table[index], without invoking any metamethod. table must be a Table; index may be any Number or String.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/rawget.html"
    },
    {
        "displayText": "rawset()",
        "type": "function",
        "snippet": "rawset( table, index, value )",
        "description": "Sets the real value of table[index] to value without invoking any metamethod. table must be a table, index any value different from nil, and value any Lua value.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/rawset.html"
    },
    {
        "displayText": "select()",
        "type": "function",
        "snippet": "select( index, ... )",
        "description": "If index is a number, select() returns all arguments after argument number index. Otherwise, index must be the string #, and select() returns the total number of extra arguments it received.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/select.html"
    },
    {
        "displayText": "setfenv()",
        "type": "function",
        "snippet": "setfenv( f, table )",
        "description": "Sets the environment \u2014 or the table where Lua keeps all its global variables \u2014 to be used by the given function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/setfenv.html"
    },
    {
        "displayText": "setmetatable()",
        "type": "function",
        "snippet": "setmetatable( table, metatable )",
        "description": "Sets the metatable for the given table (you cannot change the metatable of other types from Lua, only from C). If metatable is nil, removes the metatable of the given table. If the original metatable has a __metatable field, it raises an error.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/setmetatable.html"
    },
    {
        "displayText": "tonumber()",
        "type": "function",
        "snippet": "tonumber( e [, base ] )",
        "description": "Tries to convert its argument to a number. If the argument is already a number or a string that can be converted to a number, tonumber() returns the number, otherwise, it returns nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/tonumber.html"
    },
    {
        "displayText": "tostring()",
        "type": "function",
        "snippet": "tostring( e )",
        "description": "This API is a useful debug tool for displaying or concatenating nil values. For complete control of how numbers are converted to strings, use string.format().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/tostring.html"
    },
    {
        "displayText": "type()",
        "type": "function",
        "snippet": "type( v )",
        "description": "Returns the type of its argument. Possible results are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/type.html"
    },
    {
        "displayText": "unpack()",
        "type": "function",
        "snippet": "unpack( list [, i [, j ]] )",
        "description": "Returns the elements from the given table. This function is equivalent to the following:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/global\/unpack.html"
    },
    {
        "displayText": "graphics.defineEffect()",
        "type": "function",
        "snippet": "graphics.defineEffect( effect )",
        "description": "This function allows you to extend Corona and define a custom shader effect. Your custom effect can define either a vertex kernel or a fragment kernel (or\u00a0both). These kernels are similar to shaders, except that they must define functions with a specific name and which conform to specific function signatures.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/defineEffect.html"
    },
    {
        "displayText": "graphics.newImageSheet()",
        "type": "function",
        "snippet": "graphics.newImageSheet( filename, [baseDir, ] options )",
        "description": "ImageSheet objects allow you to load multiple graphics from a single image file (also known as a spritesheet). Image sheets can be used for static images (useful for preloading many static images) and animated sprites.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/newImageSheet.html"
    },
    {
        "displayText": "graphics.newMask()",
        "type": "function",
        "snippet": "graphics.newMask( filename [, baseDir] )",
        "description": "Creates a bit mask from an image file. The image is converted internally to grayscale. The white pixels of the bit mask allow the covered image to be visible, while black pixels hide (mask) the covered image. The area outside of the mask must be filled with black pixels which mask off the area outside the mask image.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/newMask.html"
    },
    {
        "displayText": "graphics.newOutline()",
        "type": "function",
        "snippet": "graphics.newOutline( coarsenessInTexels, imageFileName [, baseDir] )",
        "description": "This function produces the outline of the shape obtained from an image file or a frame within an ImageSheet. A shape is recognized by the image's non-transparent alpha value. Generally, simpler images produce better outlines.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/newOutline.html"
    },
    {
        "displayText": "graphics.newTexture()",
        "type": "function",
        "snippet": "graphics.newTexture( params )",
        "description": "Creates a TextureResource object which allows you to access and manage textures. This can be used to pre-load a texture\/image and prevent it from being disposed when there is no display object using it.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/newTexture.html"
    },
    {
        "displayText": "graphics.releaseTextures()",
        "type": "function",
        "snippet": "graphics.releaseTextures( params )",
        "description": "This convenience function disposes\/releases all TextureResource objects of a specific type.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/graphics\/releaseTextures.html"
    },
    {
        "displayText": "io.close()",
        "type": "function",
        "snippet": "io.close( [file] )",
        "description": "Closes an open file handle. Equivalent to file:close(). If a file handle is not specified, this function closes the default output file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/close.html"
    },
    {
        "displayText": "io.flush()",
        "type": "function",
        "snippet": "io.flush()",
        "description": "Flushes the default output file. Equivalent to io.output():flush.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/flush.html"
    },
    {
        "displayText": "io.input()",
        "type": "function",
        "snippet": "io.input( file )",
        "description": "Sets the standard input file. When called with a file handle, it simply sets this file handle as the default input file. When called without parameters, it returns the current default input file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/input.html"
    },
    {
        "displayText": "io.lines()",
        "type": "function",
        "snippet": "io.lines( file )",
        "description": "Opens the given file name in read mode and returns an iterator function that, each time it is called, returns a new line from the file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/lines.html"
    },
    {
        "displayText": "io.open()",
        "type": "function",
        "snippet": "io.open( file [, mode] )",
        "description": "This function opens a file for reading or writing, in the string (default) or binary mode. It returns a new file handle or, in case of errors, nil plus an error message. This function can also be used to create a new file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/open.html"
    },
    {
        "displayText": "io.output()",
        "type": "function",
        "snippet": "io.output( [file] )",
        "description": "Sets the standard output file. When called with a file name, it opens the named file in text mode and sets its handle as the default output file. When called with a file handle, it simply sets this file handle as the default output file. When called without parameters, it returns the current default output file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/output.html"
    },
    {
        "displayText": "io.read()",
        "type": "function",
        "snippet": "io.read( [fmt1] [, fmt2] [, ...] )",
        "description": "Reads the file set by io.input(), according to the given formats, which specify what to read. For each format, the function returns a string or a number with the characters read, or nil if it cannot read data with the specified format. When called without formats, it uses a default format that reads the entire next line (\"*l\").",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/read.html"
    },
    {
        "displayText": "io.tmpfile()",
        "type": "function",
        "snippet": "io.tmpfile()",
        "description": "Opens a temporary file for reading and writing and returns a handle to it. When the app ends normally, this file will be deleted.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/tmpfile.html"
    },
    {
        "displayText": "io.type()",
        "type": "function",
        "snippet": "io.type( obj )",
        "description": "Checks whether obj is a valid file handle. Returns the string \"file\" if obj is an open file handle, \"closed file\" if obj is a closed file handle, or nil if obj is not a file handle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/type.html"
    },
    {
        "displayText": "io.write()",
        "type": "function",
        "snippet": "io.write( arg1 [, arg2] [, ...] )",
        "description": "Writes the value of each of its arguments to the file. The arguments must be strings or numbers. To write other values, use tostring() or string.format() before writing.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/io\/write.html"
    },
    {
        "displayText": "json.decode()",
        "type": "function",
        "snippet": "json.decode( data [, position [, nullval]] )",
        "description": "Decodes the JSON-encoded data structure and returns a Lua object (table) with the appropriate data. The return values are a Lua object or nil, the position of the next character that doesn't belong to the object, or (in case of errors) an error message.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/json\/decode.html"
    },
    {
        "displayText": "json.encode()",
        "type": "function",
        "snippet": "json.encode( t [, options] )",
        "description": "Returns the Lua object (table) as a JSON-encoded string. Since items with nil values in a Lua table effectively don't exist, you should use json.null as a placeholder value if you need to preserve array indices in your JSON (see discussion of nullval in json.decode()).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/json\/encode.html"
    },
    {
        "displayText": "json.prettify()",
        "type": "function",
        "snippet": "json.prettify( obj )",
        "description": "Returns a string which is a human readable representation of the given object (or valid JSON string). The string is indented and the top-level keys are sorted into alphabetical order.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/json\/prettify.html"
    },
    {
        "displayText": "licensing.init()",
        "type": "function",
        "snippet": "licensing.init( providerName )",
        "description": "Initializes the licensing service library by specifying the name of the licensing provider. Currently, only \"google\" is supported.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/licensing\/init.html"
    },
    {
        "displayText": "licensing.verify()",
        "type": "function",
        "snippet": "licensing.verify( listener )",
        "description": "Starts the licensing verification process.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/licensing\/verify.html"
    },
    {
        "displayText": "media.capturePhoto()",
        "type": "function",
        "snippet": "media.capturePhoto( { listener, [, destination] } )",
        "description": "Opens a platform-specific interface to the device's camera. This function is asynchronous, meaning that it returns immediately so the calling code will continue to execute until the end of its scope; after that, the application will be suspended until the session is complete. By default, the image object is added to the top of the current stage, although there is an option to save the image to a directory instead.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/capturePhoto.html"
    },
    {
        "displayText": "media.captureVideo()",
        "type": "function",
        "snippet": "media.captureVideo ( { listener [, preferredQuality] [, preferredMaxDuration] } )",
        "description": "Opens a platform-specific interface to the device's camera. This function is asynchronous, meaning that it returns immediately so the calling code will continue to execute until the end of its scope; after that, the application will be suspended until the session is complete. A listener is required to handle the captured object (URL) which can be used in native.newVideo() and media.playVideo().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/captureVideo.html"
    },
    {
        "displayText": "media.hasSource()",
        "type": "function",
        "snippet": "media.hasSource( mediaSource )",
        "description": "Determines if the given media source, such as a camera or photo library, is available on the platform. This function should be called before calling media.selectPhoto() or media.capturePhoto() to determine if that media service is available. Returns true if the media source is available on the platform\/device. Returns false if not.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/hasSource.html"
    },
    {
        "displayText": "media.newEventSound()",
        "type": "function",
        "snippet": "media.newEventSound( filename [, baseDir] )",
        "description": "Loads the event sound (1-3 seconds) from a sound file and returns an event sound ID that can be passed to media.playEventSound().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/newEventSound.html"
    },
    {
        "displayText": "media.newRecording()",
        "type": "function",
        "snippet": "media.newRecording( [path] )",
        "description": "Create an object for audio recording (Recording).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/newRecording.html"
    },
    {
        "displayText": "media.pauseSound()",
        "type": "function",
        "snippet": "media.pauseSound()",
        "description": "Pauses playback of the extended sound currently opened by the previous call to media.playSound(). Use media.playSound() to resume playback of a paused sound.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/pauseSound.html"
    },
    {
        "displayText": "media.playEventSound()",
        "type": "function",
        "snippet": "media.playEventSound( sound [, baseDir] [, completionListener] )",
        "description": "Plays an event sound (1-3 seconds). The first argument may be either an event sound ID or a filename for the event sound. Recommended for short sounds, especially to avoid performance hiccups.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/playEventSound.html"
    },
    {
        "displayText": "media.playSound()",
        "type": "function",
        "snippet": "media.playSound( soundfile [, baseDir] [, onComplete] )\n\nmedia.playSound( soundfile [, baseDir] [, loop] )",
        "description": "Plays an extended sound (as opposed to an \"event sound\" which is typically 1-3 seconds in duration), or resumes play of a paused extended sound. You can only have one such sound file open at a time.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/playSound.html"
    },
    {
        "displayText": "media.playVideo()",
        "type": "function",
        "snippet": "media.playVideo( path [, baseSource ], showControls, listener )",
        "description": "Plays the video at the specified path (both local and remote) in a device-specific popup media player.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/playVideo.html"
    },
    {
        "displayText": "media.save()",
        "type": "function",
        "snippet": "media.save( filename [, baseDir] )",
        "description": "Adds specified file to photo library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/save.html"
    },
    {
        "displayText": "media.selectPhoto()",
        "type": "function",
        "snippet": "media.selectPhoto ( { listener [, mediaSource] [, destination] [, origin] [, permittedArrowDirections] } )",
        "description": "Opens a platform-specific interface to the device's photo library. This function is asynchronous, meaning that it returns immediately so the calling code will continue to execute until the end of its scope; after that, the application will be suspended until the session is complete. By default, the image object is added to the top of the current stage, although there is an option to save the image to a directory instead.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/selectPhoto.html"
    },
    {
        "displayText": "media.selectVideo()",
        "type": "function",
        "snippet": "media.selectVideo ( { listener [, mediaSource] [, origin] [, permittedArrowDirections] } )",
        "description": "Opens a platform-specific interface to the device's photo library. This function is asynchronous, meaning that it returns immediately so the calling code will continue to execute until the end of its scope; after that, the application will be suspended until the session is complete.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/selectVideo.html"
    },
    {
        "displayText": "media.setSoundVolume()",
        "type": "function",
        "snippet": "media.setSoundVolume( volume )",
        "description": "Adjusts the playback volume of an extended sound (media.playSound()). This setting can be adjusted at any time before or during the extended sound playback.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/setSoundVolume.html"
    },
    {
        "displayText": "media.stopSound()",
        "type": "function",
        "snippet": "media.stopSound()",
        "description": "Stops playback of the extended sound currently opened by the previous call to media.playSound().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/media\/stopSound.html"
    },
    {
        "displayText": "native.cancelAlert()",
        "type": "function",
        "snippet": "native.cancelAlert( alert )",
        "description": "Dismisses an alert box programmatically. For example, you may wish to have a popup alert that automatically disappears after ten seconds even if the user doesn't click it. In that case, you could call this function at the end of a timer.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/cancelAlert.html"
    },
    {
        "displayText": "native.cancelWebPopup()",
        "type": "function",
        "snippet": "native.cancelWebPopup()",
        "description": "Dismisses the currently displaying web popup. This function takes no arguments because only one web popup can be shown at one time (not to be confused with native web views which can have multiple instances shown at once).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/cancelWebPopup.html"
    },
    {
        "displayText": "native.canShowPopup()",
        "type": "function",
        "snippet": "native.canShowPopup( name )",
        "description": "Returns whether or not the popup type can be shown. This usually defines whether the popup will actually be displayed. However, in the case of \"appStore\", a result of true does not guarantee that the popup will be displayed because, in those cases, the particular popup will depend on additional parameters.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/canShowPopup.html"
    },
    {
        "displayText": "native.getFontNames()",
        "type": "function",
        "snippet": "native.getFontNames()",
        "description": "Returns an array of the available native fonts.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/getFontNames.html"
    },
    {
        "displayText": "native.getProperty()",
        "type": "function",
        "snippet": "native.getProperty( key )",
        "description": "Gets the value of a platform-specific property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/getProperty.html"
    },
    {
        "displayText": "native.getSync()",
        "type": "function",
        "snippet": "native.getSync( filename, params )",
        "description": "Gets the iCloud automatic backup settings for files in the system.DocumentsDirectory on OS X and iOS systems.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/getSync.html"
    },
    {
        "displayText": "native.newFont()",
        "type": "function",
        "snippet": "native.newFont( name [, size] )",
        "description": "Creates a font object that you can use to specify fonts in native text fields and text boxes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newFont.html"
    },
    {
        "displayText": "native.newMapView()",
        "type": "function",
        "snippet": "native.newMapView( centerX, centerY, width, height )",
        "description": "Renders a map view within the specified boundaries and returns a display object wrapper. On the map view, touch events are available when you add a mapLocation event listener.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newMapView.html"
    },
    {
        "displayText": "native.newTextBox()",
        "type": "function",
        "snippet": "native.newTextBox( centerX, centerY, width, height )",
        "description": "Creates a scrollable, multi-line text box for text input. For single-line text input, see native.newTextField().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newTextBox.html"
    },
    {
        "displayText": "native.newTextField()",
        "type": "function",
        "snippet": "native.newTextField( centerX, centerY, width, height )",
        "description": "Creates a single-line text field for text input. For multi-line text input, see native.newTextBox().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newTextField.html"
    },
    {
        "displayText": "native.newVideo()",
        "type": "function",
        "snippet": "native.newVideo( centerX, centerY, width, height )",
        "description": "Returns a video object that can be moved and rotated. This API supports local videos (in\u00a0one of the system directories) or from a remote location (server).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newVideo.html"
    },
    {
        "displayText": "native.newWebView()",
        "type": "function",
        "snippet": "native.newWebView( centerX, centerY, width, height )",
        "description": "Loads a web page in a web view container. Native web views differ from web popups in that you can move them (via x\/y properties) or rotate them (via the rotation property) in the same manner as other display objects.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/newWebView.html"
    },
    {
        "displayText": "native.requestExit()",
        "type": "function",
        "snippet": "native.requestExit()",
        "description": "Closes the application window on Android or Windows Phone gracefully without terminating the process.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/requestExit.html"
    },
    {
        "displayText": "native.setActivityIndicator()",
        "type": "function",
        "snippet": "native.setActivityIndicator( state )",
        "description": "Displays or hides a platform-specific activity indicator. Touch events are ignored while the indicator is shown.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/setActivityIndicator.html"
    },
    {
        "displayText": "native.setKeyboardFocus()",
        "type": "function",
        "snippet": "native.setKeyboardFocus( textField )",
        "description": "Sets keyboard focus on a native.newTextField() or native.newTextBox() and shows (or\u00a0hides) the keyboard. Pass nil to remove focus and hide the keyboard. Hiding the keyboard dispatches an \"ended\" phase to the native object's listener function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/setKeyboardFocus.html"
    },
    {
        "displayText": "native.setProperty()",
        "type": "function",
        "snippet": "native.setProperty( key, value )",
        "description": "Sets a platform-specific property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/setProperty.html"
    },
    {
        "displayText": "native.showAlert()",
        "type": "function",
        "snippet": "native.showAlert( title, message [, { buttonLabels } [, listener] ] )",
        "description": "Displays a popup alert box with one or more buttons, using a native alert control. Program activity, including animation, will continue in the background, but all other user interactivity will be blocked until the user selects a button or cancels the dialog.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/showAlert.html"
    },
    {
        "displayText": "native.showPopup()",
        "type": "function",
        "snippet": "native.showPopup( name )\nnative.showPopup( name, options )",
        "description": "Displays the operating system's default popup window for a specified service. Displaying this popup suspends the app on both iOS and Android.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/showPopup.html"
    },
    {
        "displayText": "native.showWebPopup()",
        "type": "function",
        "snippet": "native.showWebPopup( [x, y, width, height,] url, [options] )",
        "description": "Creates a web popup that loads a local or remote web page.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/showWebPopup.html"
    },
    {
        "displayText": "native.setSync()",
        "type": "function",
        "snippet": "native.setSync( filename, params )",
        "description": "Sets the iCloud automatic backup flag for files in the system.DocumentsDirectory on OS X and iOS systems.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/native\/setSync.html"
    },
    {
        "displayText": "network.canDetectNetworkStatusChanges",
        "type": "property",
        "snippet": "network.canDetectNetworkStatusChanges",
        "description": "Returns true if network reachability events are supported on the current platform.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/canDetectNetworkStatusChanges.html"
    },
    {
        "displayText": "network.setStatusListener()",
        "type": "function",
        "snippet": "network.setStatusListener( hostURL, listener )",
        "description": "Starts monitoring a host for its network reachability status. This API is designed around the idea that you are monitoring individual hosts and not the hardware directly. Potentially, some hosts might continue to be reachable while others are not due to internet conditions, firewall configurations, authentication rules, and whether you need full DNS routing.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/setStatusListener.html"
    },
    {
        "displayText": "network.request()",
        "type": "function",
        "snippet": "network.request( url, method, listener [, params] )",
        "description": "Makes an asynchronous HTTP or HTTPS request to a URL. This function returns a handle that can be passed to network.cancel() in order to cancel the request.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/request.html"
    },
    {
        "displayText": "network.cancel()",
        "type": "function",
        "snippet": "network.cancel( requestId )",
        "description": "Cancel an outstanding network request made with network.request(), network.upload(), or network.download().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/cancel.html"
    },
    {
        "displayText": "network.download()",
        "type": "function",
        "snippet": "network.download( url, method, listener [, params], filename [, baseDirectory] )",
        "description": "This API is a convenience method that is very similar to the asynchronous network.request(), except that it always attempts to download the response to a local file that you specify. In fact, this method simply calls network.request(), putting the destination filename and baseDirectory parameters into params.response and specifying \"download\" progress notifications.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/download.html"
    },
    {
        "displayText": "network.upload()",
        "type": "function",
        "snippet": "network.upload( url, method, listener [, params], filename [, baseDirectory] [, contentType] )",
        "description": "This API is a convenience method that is very similar to the asynchronous network.request(), except that always attempts to upload the request from a local file that you specify. In fact, this method simply calls network.request(), putting the source filename and baseDirectory parameters into a params.body table, adding contentType as a params.headers request header value, and specifying \"upload\" progress notifications.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/network\/upload.html"
    },
    {
        "displayText": "os.clock()",
        "type": "function",
        "snippet": "os.clock()",
        "description": "Returns an approximation of the amount in seconds of CPU time used by the program.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/clock.html"
    },
    {
        "displayText": "os.date()",
        "type": "function",
        "snippet": "os.date( [format [, time] ] )",
        "description": "Returns a string or a table containing date and time, formatted according to the given string format. When called without arguments, os.date() returns a reasonable date and time representation that depends on the host system and on the current locale (that\u00a0is, os.date() is equivalent to os.date(\"%c\")).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/date.html"
    },
    {
        "displayText": "os.difftime()",
        "type": "function",
        "snippet": "os.difftime( t1, t2 )",
        "description": "Returns the number of seconds from time t1 to time t2. In POSIX, Windows, and some other systems, this value is exactly t2 - t1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/difftime.html"
    },
    {
        "displayText": "os.execute()",
        "type": "function",
        "snippet": "os.execute( cmd )",
        "description": "Passes a string to the operating system for execution and returns a system-dependent status code. This function is equivalent to the C function system().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/execute.html"
    },
    {
        "displayText": "os.exit()",
        "type": "function",
        "snippet": "os.exit( [ exit ] )",
        "description": "Calls the C function exit(), with an optional code, to terminate the host program. The default value for code is the success code.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/exit.html"
    },
    {
        "displayText": "os.remove()",
        "type": "function",
        "snippet": "os.remove( file )",
        "description": "Deletes a file or directory and returns two possible values:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/remove.html"
    },
    {
        "displayText": "os.rename()",
        "type": "function",
        "snippet": "os.rename( oldname, newname )",
        "description": "Renames a file or directory and returns two possible values:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/rename.html"
    },
    {
        "displayText": "os.time()",
        "type": "function",
        "snippet": "os.time( table )",
        "description": "Returns the current time in seconds from 1970 when called without arguments, or a time representing the date and time specified by the given table.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/os\/time.html"
    },
    {
        "displayText": "require()",
        "type": "function",
        "snippet": "local name = require( \"moduleName\" )\nlocal name = require \"moduleName\"",
        "description": "Loads the given module.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/package\/require.html"
    },
    {
        "displayText": "package.loaded",
        "type": "property",
        "snippet": "package.loaded",
        "description": "A table used by require() to control which modules are already loaded. When you require a module modname and package.loaded[modname] is not false, require() simply returns the value stored there.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/package\/loaded.html"
    },
    {
        "displayText": "package.loaders",
        "type": "property",
        "snippet": "package.loaders",
        "description": "A table used by require() to control how to load modules.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/package\/loaders.html"
    },
    {
        "displayText": "physics.addBody()",
        "type": "function",
        "snippet": "physics.addBody( object, [bodyType,] [params] )",
        "description": "This function turns almost any Corona display object into a simulated physical object with specific physical properties. It accepts the display object, an optional body type (string), and an optional params table containing key-value pairs that specify the properties for the physics body. Within this params table, the following apply:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/addBody.html"
    },
    {
        "displayText": "physics.fromMKS()",
        "type": "function",
        "snippet": "physics.fromMKS( unitName, value ) ",
        "description": "Convenience function for converting from MKS units to Corona units.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/fromMKS.html"
    },
    {
        "displayText": "physics.getAverageCollisionPositions()",
        "type": "function",
        "snippet": "physics.getAverageCollisionPositions()",
        "description": "It's common for Box2D to report multiple contact points during a single iteration of a simulation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/getAverageCollisionPositions.html"
    },
    {
        "displayText": "physics.getDebugErrorsEnabled()",
        "type": "function",
        "snippet": "physics.getDebugErrorsEnabled()",
        "description": "This function is used to determine if extra physics errors are allowed to be caught by Box2D.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/getDebugErrorsEnabled.html"
    },
    {
        "displayText": "physics.getGravity()",
        "type": "function",
        "snippet": "physics.getGravity()",
        "description": "Returns the x and y components of the global gravity vector, in units of m\/s\u00b2. This takes advantage of the fact that Lua functions can return multiple values, which in this case are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/getGravity.html"
    },
    {
        "displayText": "physics.getMKS()",
        "type": "function",
        "snippet": "physics.getMKS( key )",
        "description": "Get the MKS value of the physics simulation for specific keys.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/getMKS.html"
    },
    {
        "displayText": "physics.getReportCollisionsInContentCoordinates()",
        "type": "function",
        "snippet": "physics.getReportCollisionsInContentCoordinates()",
        "description": "This function is used to determine if the content origin is the collision point in the collision, preCollision, and postCollision physics events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/getReportCollisionsInContentCoordinates.html"
    },
    {
        "displayText": "physics.newJoint()",
        "type": "function",
        "snippet": "physics.newJoint( jointType, ... )",
        "description": "Joints can be used to assemble complex physical objects from multiple rigid bodies. For example, joints can be used to join the limbs of a ragdoll figure, attach the wheels of a vehicle to its body, create a moving elevator platform, and more.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/newJoint.html"
    },
    {
        "displayText": "physics.newParticleSystem()",
        "type": "function",
        "snippet": "physics.newParticleSystem( params )",
        "description": "A ParticleSystem object contains particles with liquid-like behavior under the LiquidFun framework.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/newParticleSystem.html"
    },
    {
        "displayText": "physics.pause()",
        "type": "function",
        "snippet": "physics.pause()",
        "description": "Pause the physics engine.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/pause.html"
    },
    {
        "displayText": "physics.queryRegion()",
        "type": "function",
        "snippet": "physics.queryRegion( upperLeftX, upperLeftY, lowerRightX, lowerRightY )",
        "description": "This function is used to find the objects that intersect with an axis-aligned (non-rotated) box. This box is defined by an upper-left coordinate and a lower-right coordinate.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/queryRegion.html"
    },
    {
        "displayText": "physics.rayCast()",
        "type": "function",
        "snippet": "physics.rayCast( fromX, fromY, toX, toY, behavior )",
        "description": "This function is used to find the objects that collide with a line, and the collision points along that line.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/rayCast.html"
    },
    {
        "displayText": "physics.reflectRay()",
        "type": "function",
        "snippet": "physics.reflectRay( fromX, fromY, hit )",
        "description": "This function is used to reflect a vector as returned by physics.rayCast().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/reflectRay.html"
    },
    {
        "displayText": "physics.removeBody()",
        "type": "function",
        "snippet": "physics.removeBody( object )",
        "description": "Removes a physics body from a display object without destroying the entire object. This removes the body created with physics.addBody().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/removeBody.html"
    },
    {
        "displayText": "physics.setAverageCollisionPositions()",
        "type": "function",
        "snippet": "physics.setAverageCollisionPositions( enabled )",
        "description": "Because it's common for Box2D to report multiple collision points during a single frame iteration, this setting is useful to report those points as one averaged point. This function applies to all the contact points in the collision, preCollision, and postCollision physics events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setAverageCollisionPositions.html"
    },
    {
        "displayText": "physics.setContinuous()",
        "type": "function",
        "snippet": "physics.setContinuous( enabled )",
        "description": "By default, Box2D performs continuous collision detection, which prevents objects from \"tunneling.\" If it were turned off, an object that moves quickly enough could potentially pass through a thin wall.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setContinuous.html"
    },
    {
        "displayText": "physics.setDebugErrorsEnabled()",
        "type": "function",
        "snippet": "physics.setDebugErrorsEnabled( enabled )",
        "description": "This function allows extra physics errors to be caught by Box2D.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setDebugErrorsEnabled.html"
    },
    {
        "displayText": "physics.setDrawMode()",
        "type": "function",
        "snippet": "physics.setDrawMode( mode )",
        "description": "Sets one of three possible \"rendering modes\" for the physics engine. While this feature will run on devices, it's most useful in the Corona Simulator when debugging unexpected physics engine behavior.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setDrawMode.html"
    },
    {
        "displayText": "physics.setGravity()",
        "type": "function",
        "snippet": "physics.setGravity( gx, gy )",
        "description": "Sets the x and y components of the global gravity vector in units of m\/s\u00b2. The default is ( 0, 9.8 ) to simulate standard Earth gravity, pointing downward on the y axis.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setGravity.html"
    },
    {
        "displayText": "physics.setMKS()",
        "type": "function",
        "snippet": "physics.setMKS( key, value )",
        "description": "Sets the MKS (meters, kilograms, and seconds) value of the physics simulation for specific keys. This is strictly for advanced purposes \u2014 the average developer and project will not require this function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setMKS.html"
    },
    {
        "displayText": "physics.setPositionIterations()",
        "type": "function",
        "snippet": "physics.setPositionIterations( value )",
        "description": "Sets the accuracy of the engine's position calculations. The default value is 3.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setPositionIterations.html"
    },
    {
        "displayText": "physics.setReportCollisionsInContentCoordinates()",
        "type": "function",
        "snippet": "physics.setReportCollisionsInContentCoordinates( enabled )",
        "description": "This function sets the content origin as the collision point in the collision, preCollision, and postCollision physics events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setReportCollisionsInContentCoordinates.html"
    },
    {
        "displayText": "physics.setScale()",
        "type": "function",
        "snippet": "physics.setScale( value )",
        "description": "Sets the internal pixels-per-meter ratio that is used in converting between on-screen Corona coordinates and simulated physics coordinates. This should be done only once, before any physical objects are instantiated.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setScale.html"
    },
    {
        "displayText": "physics.setTimeStep()",
        "type": "function",
        "snippet": "physics.setTimeStep( dt )",
        "description": "Specifies either a frame-based (approximated) physics simulation or a time-based simulation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setTimeStep.html"
    },
    {
        "displayText": "physics.setVelocityIterations()",
        "type": "function",
        "snippet": "physics.setVelocityIterations( value )",
        "description": "Sets the accuracy of the engine's velocity calculations. The default value is 8.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/setVelocityIterations.html"
    },
    {
        "displayText": "physics.start()",
        "type": "function",
        "snippet": "physics.start( noSleep )",
        "description": "This function start the physics simulation and should be called before any other physics functions.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/start.html"
    },
    {
        "displayText": "physics.stop()",
        "type": "function",
        "snippet": "physics.stop()",
        "description": "Stops the physics engine. This function will return false and display a warning message if the API cannot be processed.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/stop.html"
    },
    {
        "displayText": "physics.toMKS()",
        "type": "function",
        "snippet": "physics.toMKS( unitName, value )",
        "description": "Convenience function for converting from Corona units to MKS units.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/toMKS.html"
    },
    {
        "displayText": "store.finishTransaction()",
        "type": "function",
        "snippet": "store.finishTransaction( transaction )",
        "description": "Notifies the Apple iTunes Store that a transaction is complete.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/finishTransaction.html"
    },
    {
        "displayText": "store.init()",
        "type": "function",
        "snippet": "store.init( [storeName,] listener )",
        "description": "Activates in-app purchases (in-app billing as it is known on Android platforms). Allows you to receive callbacks with the listener function that you specify.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/init.html"
    },
    {
        "displayText": "store.loadProducts()",
        "type": "function",
        "snippet": "store.loadProducts( productIdentifiers, listener )",
        "description": "iOS and the Google Play Marketplace support loading of product information that you've entered into iTunes\u00a0Connect or the Google Play Developer Console. Corona provides the store.canLoadProducts property which will be true if the initialized store supports the loading of products. Following this check, the store.loadProducts() function will retrieve information about items available for sale. This includes the title, description, product identifier, type, and other details.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/loadProducts.html"
    },
    {
        "displayText": "store.purchase()",
        "type": "function",
        "snippet": "store.purchase( arrayOfProducts )",
        "description": "Initiates a purchase transaction on a provided list of products.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/purchase.html"
    },
    {
        "displayText": "store.restore()",
        "type": "function",
        "snippet": "store.restore()",
        "description": "Users who wipe the information on a device or buy a new device, may wish to restore previously purchased items without paying for them again. The store.restore() API initiates this process.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/restore.html"
    },
    {
        "displayText": "string.byte()",
        "type": "function",
        "snippet": "string.byte( s [, i [, j]] )\n\ns:byte( [, i [, j]] )",
        "description": "Returns the internal numerical codes of the characters in a string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/byte.html"
    },
    {
        "displayText": "string.char()",
        "type": "function",
        "snippet": "string.char( [arg1 [, ...] )",
        "description": "Returns a string in which each character has the internal numerical code equal to its corresponding argument.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/char.html"
    },
    {
        "displayText": "string.find()",
        "type": "function",
        "snippet": "string.find( s, pattern [, init [, plain]] )",
        "description": "Looks for the first match of a pattern in a string. If found, it returns the indices where the occurrence starts and ends; otherwise, returns nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/find.html"
    },
    {
        "displayText": "string.format()",
        "type": "function",
        "snippet": "string.format( formatstring [, ...] )\n\nformatstring:format( [...] )",
        "description": "Returns a formatted string following the description given in its arguments.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/format.html"
    },
    {
        "displayText": "string.gmatch()",
        "type": "function",
        "snippet": "string.gmatch( s, pattern )\n\ns:gmatch( pattern )",
        "description": "Returns a pattern-finding iterator. See Lua String Manipulation for more information.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/gmatch.html"
    },
    {
        "displayText": "string.gsub()",
        "type": "function",
        "snippet": "string.gsub( s, pattern, repl [, n] )\n\ns:gsub( pattern, replace [,n] )",
        "description": "Replace all occurrences of a pattern in a string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/gsub.html"
    },
    {
        "displayText": "string.len()",
        "type": "function",
        "snippet": "string.len( s )\n\ns:len()",
        "description": "Returns the length of a string (amount of characters).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/len.html"
    },
    {
        "displayText": "string.lower()",
        "type": "function",
        "snippet": "string.lower( s )\n\ns:lower()",
        "description": "Change uppercase characters in a string to lowercase.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/lower.html"
    },
    {
        "displayText": "string.match()",
        "type": "function",
        "snippet": "string.match( s, pattern [, init] ) \n\ns:match( pattern [, init] )",
        "description": "Extract substrings by matching a pattern in a string. If a match is found, the captures from the pattern; otherwise it returns nil. If pattern specifies no captures, then the whole match is returned.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/match.html"
    },
    {
        "displayText": "string.rep()",
        "type": "function",
        "snippet": "string.rep( s, n )\n\ns:rep( n )",
        "description": "Replicates a string by returning a string that is the concatenation of n copies of a specified String.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/rep.html"
    },
    {
        "displayText": "string.reverse()",
        "type": "function",
        "snippet": "string.reverse( s )\n\ns:reverse()",
        "description": "Reverses a string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/reverse.html"
    },
    {
        "displayText": "string.sub()",
        "type": "function",
        "snippet": "string.sub( s, i [, j] )\n\ns:sub( i [,j] )",
        "description": "Returns a substring (a specified portion of an existing string).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/sub.html"
    },
    {
        "displayText": "string.upper()",
        "type": "function",
        "snippet": "string.upper( s )\n\ns:upper()",
        "description": "Change lowercase characters in a string to uppercase. All other characters are left unchanged.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/string\/upper.html"
    },
    {
        "displayText": "system.activate()",
        "type": "function",
        "snippet": "system.activate( feature )",
        "description": "Activates a system level feature, such as \"multitouch\". Use system.deactivate() to disable a feature.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/activate.html"
    },
    {
        "displayText": "system.cancelNotification()",
        "type": "function",
        "description": "",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/cancelNotification.html"
    },
    {
        "displayText": "system.deactivate()",
        "type": "function",
        "snippet": "system.deactivate( feature )",
        "description": "Deactivates a system level feature, such as \"multitouch\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/deactivate.html"
    },
    {
        "displayText": "system.getIdleTimer()",
        "type": "function",
        "snippet": "system.getIdleTimer()",
        "description": "Returns whether the application idle timer is enabled.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/getIdleTimer.html"
    },
    {
        "displayText": "system.getInfo()",
        "type": "function",
        "snippet": "system.getInfo( property )",
        "description": "Returns information about the system on which the application is running.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/getInfo.html"
    },
    {
        "displayText": "system.getInputDevices()",
        "type": "function",
        "snippet": "system.getInputDevices()",
        "description": "Returns an array of InputDevice devices that are currently connected to the system, such as a touchscreen, keyboard, mouse, joystick, etc. Alternatively returns an empty array if no input devices are found. Note that input devices which were once connected but were later disconnected will not be returned by this function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/getInputDevices.html"
    },
    {
        "displayText": "system.getPreference()",
        "type": "function",
        "snippet": "system.getPreference( category, name )",
        "description": "Returns a preference value as a string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/getPreference.html"
    },
    {
        "displayText": "system.getTimer()",
        "type": "function",
        "snippet": "system.getTimer()",
        "description": "Returns time in milliseconds since application launch.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/getTimer.html"
    },
    {
        "displayText": "system.hasEventSource()",
        "type": "function",
        "snippet": "system.hasEventSource( eventName )",
        "description": "Returns whether the system delivers events corresponding to eventName.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/hasEventSource.html"
    },
    {
        "displayText": "system.openURL()",
        "type": "function",
        "snippet": "system.openURL( url )",
        "description": "Open a web page in the browser, create an email, or dial a phone number.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/openURL.html"
    },
    {
        "displayText": "system.pathForFile()",
        "type": "function",
        "snippet": "system.pathForFile( filename [, baseDirectory] )",
        "description": "Generates an absolute path using system-defined directories as the base. An additional optional parameter, baseDirectory, specifies which base directory is used to construct the full path, with its default value being system.ResourceDirectory.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/pathForFile.html"
    },
    {
        "displayText": "system.scheduleNotification()",
        "type": "function",
        "description": "",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/scheduleNotification.html"
    },
    {
        "displayText": "system.setAccelerometerInterval()",
        "type": "function",
        "snippet": "system.setAccelerometerInterval( frequency )",
        "description": "Sets the frequency of accelerometer events. On the iPhone, the minimum frequency is 10 Hz and the maximum is 100 Hz. Accelerometer events are a significant drain on battery, so only increase the frequency when you need faster responses.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setAccelerometerInterval.html"
    },
    {
        "displayText": "system.setGyroscopeInterval()",
        "type": "function",
        "snippet": "system.setGyroscopeInterval( frequency )",
        "description": "Sets the frequency of gyroscope events in Hz. Gyroscope events are a significant drain on battery, so only increase the frequency when you need faster responses.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setGyroscopeInterval.html"
    },
    {
        "displayText": "system.setIdleTimer()",
        "type": "function",
        "snippet": "system.setIdleTimer( enabled )",
        "description": "Controls whether the idle timer is enabled. If set to true, the timer will be active (default) or inactive if false. When active, the idle timer dims the screen and eventually puts the device to sleep when no user activity occurs (e.g. screen touches).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setIdleTimer.html"
    },
    {
        "displayText": "system.setLocationAccuracy()",
        "type": "function",
        "snippet": "system.setLocationAccuracy( distance )",
        "description": "Sets the desired accuracy of location (GPS) events to distance in meters. Note: the actual accuracy depends on the capabilities of the device and\/or platform. On the iPhone, accuracy is limited to discrete distances: < 10, 10, 100, 1000, and 3000 meters. Higher accuracy (smaller distances) requires more battery life, so use larger distance to preserve battery life.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setLocationAccuracy.html"
    },
    {
        "displayText": "system.setLocationThreshold()",
        "type": "function",
        "snippet": "system.setLocationThreshold( distance )",
        "description": "Sets how much distance in meters must be travelled until the next location (GPS) event is sent. Because location events involve hardware that can drain the battery, using larger threshold distances preserve battery life.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setLocationThreshold.html"
    },
    {
        "displayText": "system.setTapDelay()",
        "type": "function",
        "snippet": "system.setTapDelay( delayTime )",
        "description": "The delay time between when a tap is detected and when the tap event is delivered. By default, this time is 0.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/setTapDelay.html"
    },
    {
        "displayText": "system.vibrate()",
        "type": "function",
        "snippet": "system.vibrate()",
        "description": "Vibrates the phone. On the Corona simulator this will sound a system beep (OS X only).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/vibrate.html"
    },
    {
        "displayText": "table.concat()",
        "type": "function",
        "snippet": "table.concat( t )\n\ntable.concat( t, sep )\n\ntable.concat( t, sep, i )\n\ntable.concat( t, sep, i, j )",
        "description": "Concatenate the elements of a table together to form a string. Each element must be able to be coerced into a string. A separator can be specified which is placed between concatenated elements.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/concat.html"
    },
    {
        "displayText": "table.copy()",
        "type": "function",
        "snippet": "table.copy( t )\n\ntable.copy( t, ... )",
        "description": "Returns a shallow copy of array, i.e. the portion of the array (table) with integer keys. A variable number of additional arrays can be passed in as optional arguments. If an array has a hole (a nil entry), copying in a given source array stops at the last consecutive item prior to the hole.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/copy.html"
    },
    {
        "displayText": "table.indexOf()",
        "type": "function",
        "snippet": "table.indexOf( t, element )",
        "description": "Returns the integer index of element in array t. Returns nil if not in array. The search goes through the length of the array as determined by #t, whose value is undefined if there are holes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/indexOf.html"
    },
    {
        "displayText": "table.insert()",
        "type": "function",
        "snippet": "table.insert( t, value )\n\ntable.insert( t, pos, value )",
        "description": "Insert a given value into a table. If a position is given insert the value before the element currently at that position.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/insert.html"
    },
    {
        "displayText": "table.maxn()",
        "type": "function",
        "snippet": "table.maxn( t )",
        "description": "Returns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices. To do its job, this function does a linear traversal of the whole table.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/maxn.html"
    },
    {
        "displayText": "table.remove()",
        "type": "function",
        "snippet": "table.remove( t )\ntable.remove( t, pos )",
        "description": "Removes from table the element at position pos, shifting down other elements to close the space, if necessary. Returns the value of the removed element.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/remove.html"
    },
    {
        "displayText": "table.sort()",
        "type": "function",
        "snippet": "table.sort( t )\ntable.sort( t, compare )",
        "description": "Sorts table elements in a given order, in-place, from table[1] to table[n], where n is the length of the table. It receives the table (array) to be sorted plus an optional compare function. This compare function receives two arguments and must return true if the first argument should come first in the sorted array. If compare is not given, then the standard Lua operator < is used instead.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/table\/sort.html"
    },
    {
        "displayText": "timer.cancel()",
        "type": "function",
        "snippet": "timer.cancel( timerID )",
        "description": "Cancels a timer operation initiated with timer.performWithDelay().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/timer\/cancel.html"
    },
    {
        "displayText": "timer.pause()",
        "type": "function",
        "snippet": "timer.pause( timerId )",
        "description": "Pauses a timer started with timer.performWithDelay(). It returns a number that represents the amount of time remaining, in milliseconds.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/timer\/pause.html"
    },
    {
        "displayText": "timer.performWithDelay()",
        "type": "function",
        "snippet": "timer.performWithDelay( delay, listener [, iterations] )",
        "description": "Call a specified function after a delay. This function returns an object that can be used with other timer functions. For example, the returned handle could be passed to timer.cancel() to cancel the invocation of the specified listener.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/timer\/performWithDelay.html"
    },
    {
        "displayText": "timer.resume()",
        "type": "function",
        "snippet": "timer.resume( timerId )",
        "description": "Resumes a timer that was paused with timer.pause(). It returns a number that represents the amount of time remaining in the timer.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/timer\/resume.html"
    },
    {
        "displayText": "transition.cancel()",
        "type": "function",
        "snippet": "transition.cancel()\ntransition.cancel( transitionReference )\ntransition.cancel( displayObject )\ntransition.cancel( tagName )",
        "description": "The transition.cancel() function will cancel one of the following, depending on the passed parameter:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/transition\/cancel.html"
    },
    {
        "displayText": "transition.from()",
        "type": "function",
        "snippet": "transition.from( target, params )",
        "description": "Similar to transition.to() except that the starting property values are specified in the parameters table and the final values are the corresponding property values of the object prior to the call.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/transition\/from.html"
    },
    {
        "displayText": "transition.pause()",
        "type": "function",
        "snippet": "transition.pause()\ntransition.pause( transitionReference )\ntransition.pause( displayObject )\ntransition.pause( tagName )",
        "description": "The transition.pause() function pauses one of the following, depending on the passed parameter:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/transition\/pause.html"
    },
    {
        "displayText": "transition.resume()",
        "type": "function",
        "snippet": "transition.resume()\ntransition.resume( transitionReference )\ntransition.resume( displayObject )\ntransition.resume( tagName )",
        "description": "The transition.resume() function resumes one of the following, depending on the passed parameter:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/transition\/resume.html"
    },
    {
        "displayText": "transition.to()",
        "type": "function",
        "snippet": "transition.to( target, params )",
        "description": "Animates (transitions) a display object using an optional easing algorithm. Use this to move, rotate, fade, or scale an object over a specific period of time.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/transition\/to.html"
    },
    {
        "displayText": "widget.newButton()",
        "type": "function",
        "snippet": "widget.newButton( options )",
        "description": "Creates a Button object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newButton.html"
    },
    {
        "displayText": "widget.newPickerWheel()",
        "type": "function",
        "snippet": "widget.newPickerWheel( options )",
        "description": "Creates a Picker Wheel object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newPickerWheel.html"
    },
    {
        "displayText": "widget.newProgressView()",
        "type": "function",
        "snippet": "widget.newProgressView( options )",
        "description": "Creates a ProgressView object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newProgressView.html"
    },
    {
        "displayText": "widget.newScrollView()",
        "type": "function",
        "snippet": "widget.newScrollView( options )",
        "description": "Creates a ScrollView object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newScrollView.html"
    },
    {
        "displayText": "widget.newSegmentedControl()",
        "type": "function",
        "snippet": "widget.newSegmentedControl( options )",
        "description": "Creates a Segmented Control object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newSegmentedControl.html"
    },
    {
        "displayText": "widget.newSlider()",
        "type": "function",
        "snippet": "widget.newSlider( options )",
        "description": "Creates a Slider object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newSlider.html"
    },
    {
        "displayText": "widget.newSpinner()",
        "type": "function",
        "snippet": "widget.newSpinner( options )",
        "description": "Creates a Spinner object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newSpinner.html"
    },
    {
        "displayText": "widget.newStepper()",
        "type": "function",
        "snippet": "widget.newStepper( options )",
        "description": "Creates a Stepper object. The stepper consists of a minus and plus button which can be tapped or held down to decrement\/increment a value, for example, the music or sound volume setting in a game.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newStepper.html"
    },
    {
        "displayText": "widget.newSwitch()",
        "type": "function",
        "snippet": "widget.newSwitch( options )",
        "description": "Creates a Switch object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newSwitch.html"
    },
    {
        "displayText": "widget.newTabBar()",
        "type": "function",
        "snippet": "widget.newTabBar( options )",
        "description": "Creates a TabBar object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newTabBar.html"
    },
    {
        "displayText": "widget.newTableView()",
        "type": "function",
        "snippet": "widget.newTableView( options )",
        "description": "Creates a TableView object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/newTableView.html"
    },
    {
        "displayText": "widget.setTheme()",
        "type": "function",
        "snippet": "widget.setTheme( themeFile )",
        "description": "Use this function to set the overall theme of the widget library. This should be called immediately after you require() the widget library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/widget\/setTheme.html"
    },
    {
        "displayText": "EmitterObject:start()",
        "type": "function",
        "snippet": "EmitterObject:start()",
        "description": "Starts the emission of particles from an EmitterObject if the emitter is stopped, or resumes the emission of particles if the emitter is paused.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/EmitterObject\/start.html"
    },
    {
        "displayText": "EmitterObject:stop()",
        "type": "function",
        "snippet": "EmitterObject:stop()",
        "description": "Stops the emission of particles from an EmitterObject. This function allows the currently active particles to finish their cycle naturally.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/EmitterObject\/stop.html"
    },
    {
        "displayText": "EmitterObject:pause()",
        "type": "function",
        "snippet": "EmitterObject:pause()",
        "description": "Pauses (freezes) the EmitterObject. No particles will be added, removed, or animated while an emitter is paused.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/EmitterObject\/pause.html"
    },
    {
        "displayText": "Runtime:hasEventSource()",
        "type": "function",
        "snippet": "Runtime:hasEventSource( eventSourceName )",
        "description": "Determines if the device is capable of providing events for a given event source such as an \"accelerometer\" or \"gyroscope\". You should call this function before calling the Runtime:addEventListener() function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Runtime\/hasEventSource.html"
    },
    {
        "displayText": "Runtime:hideErrorAlerts()",
        "type": "function",
        "snippet": "Runtime:hideErrorAlerts()",
        "description": "Disables the runtime error alert that appears if the application hits an error condition. This is shorthand for defining your own unhandledError listener and returning true.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Runtime\/hideErrorAlerts.html"
    },
    {
        "displayText": "audio.freeChannels",
        "type": "property",
        "snippet": "audio.freeChannels",
        "description": "This property is equal to the number of channels that are currently available for playback (channels not playing or paused).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/freeChannels.html"
    },
    {
        "displayText": "audio.totalChannels",
        "type": "property",
        "snippet": "audio.totalChannels",
        "description": "Returns the total number of channels. This value is currently 32, but the limit may change in the future.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/totalChannels.html"
    },
    {
        "displayText": "audio.unreservedFreeChannels",
        "type": "property",
        "snippet": "audio.unreservedFreeChannels",
        "description": "Returns the number of channels that are currently available for playback (channels not playing or paused), excluding the channels which have been reserved.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/unreservedFreeChannels.html"
    },
    {
        "displayText": "audio.unreservedUsedChannels",
        "type": "property",
        "snippet": "audio.unreservedUsedChannels",
        "description": "Returns the number of channels that are currently in use (playing or paused), excluding the channels which have been reserved.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/unreservedUsedChannels.html"
    },
    {
        "displayText": "audio.usedChannels",
        "type": "property",
        "snippet": "audio.usedChannels",
        "description": "Returns the number of channels that are currently in use (playing or paused).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/audio\/usedChannels.html"
    },
    {
        "displayText": "composer.isDebug",
        "type": "property",
        "snippet": "composer.isDebug",
        "description": "Toggles \"Composer Debug Mode\" which, if set to true, prints useful debugging information to the Corona Simulator Console in certain situations. This should be set to false (default) before building the project for deployment.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/isDebug.html"
    },
    {
        "displayText": "composer.recycleOnLowMemory",
        "type": "property",
        "snippet": "composer.recycleOnLowMemory",
        "description": "If the OS issues a low memory warning, Composer will automatically recycle the scene used least recently (that scene's self.view will be removed). If you prefer to disable auto-recycling functionality, set this property to false. Default is true.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/recycleOnLowMemory.html"
    },
    {
        "displayText": "composer.recycleOnSceneChange",
        "type": "property",
        "snippet": "composer.recycleOnSceneChange",
        "description": "By default, when changing scenes, Composer keeps the current scene's view (self.view) in memory, which can improve performance if you access the same scenes frequently. If you set composer.recycleOnSceneChange to true, the scene's self.view display group will be removed, but its scene object will remain in memory. The default value is false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/recycleOnSceneChange.html"
    },
    {
        "displayText": "composer.stage",
        "type": "property",
        "snippet": "composer.stage",
        "description": "Returns a reference to the top-level Composer display group which all scene views are inserted into. This can be considered as the \"Composer\u00a0scene\u00a0layer\" and it's useful if you need to place display objects above or below all Composer scenes, even during transition effects. For example:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/composer\/stage.html"
    },
    {
        "displayText": "display.actualContentHeight",
        "type": "property",
        "description": "The height in Corona content units of the screen. The result depends on the scale setting in config.lua. See the Project Configuration guide for more information.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/actualContentHeight.html"
    },
    {
        "displayText": "display.actualContentWidth",
        "type": "property",
        "description": "The width in Corona content units of the screen. The result depends on the scale setting in config.lua. See the Project Configuration guide for more information.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/actualContentWidth.html"
    },
    {
        "displayText": "display.contentCenterX",
        "type": "property",
        "description": "The center of the content area along the x axis. Equivalent to display.contentWidth * 0.5.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentCenterX.html"
    },
    {
        "displayText": "display.contentCenterY",
        "type": "property",
        "description": "The center of the content area along the y axis. Equivalent to display.contentHeight * 0.5.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentCenterY.html"
    },
    {
        "displayText": "display.contentHeight",
        "type": "property",
        "description": "A read-only property representing the height of the content area in pixels. This will default to the screen height, but may be another value if you are using content scaling in config.lua.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentHeight.html"
    },
    {
        "displayText": "display.contentScaleX",
        "type": "property",
        "description": "The ratio between content pixel and screen pixel width.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentScaleX.html"
    },
    {
        "displayText": "display.contentScaleY",
        "type": "property",
        "description": "The ratio between content pixel and screen pixel height.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentScaleY.html"
    },
    {
        "displayText": "display.contentWidth",
        "type": "property",
        "description": "A read-only property representing the width of the content area in pixels. This will default to the screen width, but may be another value if you are using content scaling in config.lua.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/contentWidth.html"
    },
    {
        "displayText": "display.currentStage",
        "type": "property",
        "description": "A reference to the current stage object, which is the root group for all display objects and groups. Currently, Corona has a single stage instance, so this function always returns a reference to the same object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/currentStage.html"
    },
    {
        "displayText": "display.fps",
        "type": "property",
        "description": "Current framerate of the running application.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/fps.html"
    },
    {
        "displayText": "display.imageSuffix",
        "type": "property",
        "description": "Returns the suffix used by the dynamic image selection feature of Corona. If the content scaling is 1, then returns nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/imageSuffix.html"
    },
    {
        "displayText": "display.pixelHeight",
        "type": "property",
        "description": "The height of the screen, in pixels. This value is always relative to portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/pixelHeight.html"
    },
    {
        "displayText": "display.pixelWidth",
        "type": "property",
        "description": "The width of the screen, in pixels. This value is always relative to portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/pixelWidth.html"
    },
    {
        "displayText": "display.screenOriginX",
        "type": "property",
        "description": "Returns the x distance from the left side of the actual screen to the left side of the content area, in reference screen units. For example, in \"letterbox\" or \"zoomEven\" scaling modes, there may be added area or cropped area on the current device screen. These methods let you find out how much visible area has been added or removed on the current device.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/screenOriginX.html"
    },
    {
        "displayText": "display.screenOriginY",
        "type": "property",
        "description": "Returns the y distance from the top of the actual screen to the top of the content area, in reference screen units. For example, in \"letterbox\" or \"zoomEven\" scaling modes, there may be added area or cropped area on the current device screen. These methods let you find out how much visible area has been added or removed on the current device.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/screenOriginY.html"
    },
    {
        "displayText": "display.statusBarHeight",
        "type": "property",
        "description": "A read-only property representing the height of the status bar in content pixels on iOS devices.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/statusBarHeight.html"
    },
    {
        "displayText": "display.topStatusBarContentHeight",
        "type": "property",
        "description": "An iOS read-only property representing the height of the status bar in content coordinates.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/topStatusBarContentHeight.html"
    },
    {
        "displayText": "display.viewableContentHeight",
        "type": "property",
        "description": "A read-only property that contains the height of the viewable screen area in content coordinates.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/viewableContentHeight.html"
    },
    {
        "displayText": "display.viewableContentWidth",
        "type": "property",
        "description": "A read-only property that contains the width of the viewable screen area in content coordinates.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/display\/viewableContentWidth.html"
    },
    {
        "displayText": "physics.engineVersion",
        "type": "property",
        "description": "A string value representing the Box2D and LiquidFun engine version.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/physics\/engineVersion.html"
    },
    {
        "displayText": "store.availableStores",
        "type": "property",
        "snippet": "store.availableStores",
        "description": "Array of store names for which Corona supports in-app purchases on the current device. This can also be used in conjunction with native.showPopup( \"appStore\" ) (reference).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/availableStores.html"
    },
    {
        "displayText": "store.canLoadProducts",
        "type": "property",
        "snippet": "store.canLoadProducts",
        "description": "This property will be true if the initialized store supports the loading of products. Following this check, the store.loadProducts() function will retrieve information about items available for sale. This includes the title, description, product identifier, type, and other details.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/canLoadProducts.html"
    },
    {
        "displayText": "store.canMakePurchases",
        "type": "property",
        "snippet": "store.canMakePurchases",
        "description": "This property is true if purchases are allowed, false otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/canMakePurchases.html"
    },
    {
        "displayText": "store.isActive",
        "type": "property",
        "snippet": "store.isActive",
        "description": "To confirm that a store is properly initialized after calling store.init(), check the store.isActive() property. This will be true if the store has successfully initialized. Currently, it will be false on a Corona app built for Amazon or Nook.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/isActive.html"
    },
    {
        "displayText": "store.target",
        "type": "property",
        "snippet": "store.target",
        "description": "Indicates the store that the app was built for. It will yield one of the following strings:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/store\/target.html"
    },
    {
        "displayText": "system.orientation",
        "type": "property",
        "snippet": "system.orientation",
        "description": "String value identifying the orientation of the device:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/library\/system\/orientation.html"
    },
    {
        "displayText": "event.isShake",
        "type": "property",
        "description": "When the user shakes the device, this value is true. What constitutes a shake is dependent on the OS\/device.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/isShake.html"
    },
    {
        "displayText": "event.deltaTime",
        "type": "property",
        "description": "The time in seconds since the last gyroscope event.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gyroscope\/deltaTime.html"
    },
    {
        "displayText": "event.name",
        "type": "property",
        "description": "The string \"video\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/video\/name.html"
    },
    {
        "displayText": "event.xGravity",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the x-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/xGravity.html"
    },
    {
        "displayText": "event.yGravity",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the y-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/yGravity.html"
    },
    {
        "displayText": "event.zGravity",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the z-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/zGravity.html"
    },
    {
        "displayText": "event.xInstant",
        "type": "property",
        "description": "Provides the change of acceleration relative to the x-axis of the device's screen in portrait orientation. This value is xGravity minus the previous xGravity reading, which provides the delta acceleration relative to zero.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/xInstant.html"
    },
    {
        "displayText": "event.yInstant",
        "type": "property",
        "description": "Provides the change of acceleration relative to the y-axis of the device's screen in portrait orientation. This value is yGravity minus the previous yGravity reading, which provides the delta acceleration relative to zero.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/yInstant.html"
    },
    {
        "displayText": "event.zInstant",
        "type": "property",
        "description": "Provides the change of acceleration relative to the z-axis of the device's screen in portrait orientation. This value is zGravity minus the previous zGravity reading, which provides the delta acceleration relative to zero.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/zInstant.html"
    },
    {
        "displayText": "event.xRaw",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the x-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/xRaw.html"
    },
    {
        "displayText": "event.yRaw",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the y-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/yRaw.html"
    },
    {
        "displayText": "event.zRaw",
        "type": "property",
        "description": "Provides the acceleration due to gravity relative to the z-axis of the device's screen in portrait orientation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/accelerometer\/zRaw.html"
    },
    {
        "displayText": "event.completed",
        "type": "property",
        "description": "Boolean property of true if the user has successfully completed a modal interaction such as using the camera.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/completion\/completed.html"
    },
    {
        "displayText": "event.handle",
        "type": "property",
        "description": "This is a reference to the audio handle associated with this event (helps prevent the usage of upvalues).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/audio\/handle.html"
    },
    {
        "displayText": "event.channel",
        "type": "property",
        "description": "The channel number which just finished playing.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/audio\/channel.html"
    },
    {
        "displayText": "event.axis",
        "type": "property",
        "description": "Provides information about the axis that generated this event.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/axis\/axis.html"
    },
    {
        "displayText": "event.device",
        "type": "property",
        "description": "Provides access to the device that the key event came from.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/device.html"
    },
    {
        "displayText": "event.normalizedValue",
        "type": "property",
        "description": "This is a scaled axis value that will never exceed -1.0 and 1.0. It is intended to be used as a scale which you can apply to velocity vectors or for positioning objects onscreen. This normalized value is much more convenient to use than the rawValue property because you don't have to deal with the varying min\/max axis ranges provided by different input devices, allowing your application to handle all axis data in a uniform manner.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/axis\/normalizedValue.html"
    },
    {
        "displayText": "event.rawValue",
        "type": "property",
        "description": "The raw value that was received from the device's axis input. This value is provided as-is from the operating system.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/axis\/rawValue.html"
    },
    {
        "displayText": "event.contact",
        "type": "property",
        "description": "During a pre-collision, there are multiple contact points that occur. You can manipulate these contact points to create certain effects like one-sided platforms.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/contact.html"
    },
    {
        "displayText": "event.element1",
        "type": "property",
        "description": "For global pre-collision handling, the element (number) of event.object1 which was hit in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/element1.html"
    },
    {
        "displayText": "event.element2",
        "type": "property",
        "description": "For global pre-collision handling, the element (number) of event.object2 which was hit in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/element2.html"
    },
    {
        "displayText": "event.object1",
        "type": "property",
        "description": "For global pre-collision handling, the reference to the first object in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/object1.html"
    },
    {
        "displayText": "event.object2",
        "type": "property",
        "description": "For global pre-collision handling, the reference to the second object in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/object2.html"
    },
    {
        "displayText": "event.other",
        "type": "property",
        "description": "For local pre-collision handling, the reference to the second object in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/other.html"
    },
    {
        "displayText": "event.otherElement",
        "type": "property",
        "description": "For local pre-collision handling, the element (number) of event.other which was hit in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/otherElement.html"
    },
    {
        "displayText": "event.phase",
        "type": "property",
        "description": "A string identifying where in the video sequence the event occurred. Can be one of the following values:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/video\/phase.html"
    },
    {
        "displayText": "event.selfElement",
        "type": "property",
        "description": "For local pre-collision handling, the element (number) of event.target which was hit in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/preCollision\/selfElement.html"
    },
    {
        "displayText": "event.target",
        "type": "property",
        "description": "event.target is a direct reference to the native object associated with the TextField or TextBox event.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/target.html"
    },
    {
        "displayText": "event.x",
        "type": "property",
        "description": "The x position in screen coordinates of the touch.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/x.html"
    },
    {
        "displayText": "event.y",
        "type": "property",
        "description": "The y position in screen coordinates of the touch.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/y.html"
    },
    {
        "displayText": "event.r",
        "type": "property",
        "description": "The red color value of the particle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/r.html"
    },
    {
        "displayText": "event.g",
        "type": "property",
        "description": "The green color value of the particle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/g.html"
    },
    {
        "displayText": "event.b",
        "type": "property",
        "description": "The blue color value of the particle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/b.html"
    },
    {
        "displayText": "event.a",
        "type": "property",
        "description": "The alpha color value of the particle.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/a.html"
    },
    {
        "displayText": "event.action",
        "type": "property",
        "description": "When the completion event is dispatched after a user has dismissed an alert dialog displayed with native.showAlert(), this property contains information about how the alert was dismissed (cancelled or accepted).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/completion\/action.html"
    },
    {
        "displayText": "event.duration",
        "type": "property",
        "description": "When the completion event is dispatched after a user has selected or captured a video with media.captureVideo() or media.selectVideo(), this property indicates the length of the video in seconds.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/completion\/duration.html"
    },
    {
        "displayText": "event.fileSize",
        "type": "property",
        "description": "When the completion event is dispatched after a user has selected or captured a video with media.captureVideo() or media.selectVideo(), this property indicates the file size to the video in bytes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/completion\/fileSize.html"
    },
    {
        "displayText": "event.url",
        "type": "property",
        "description": "The absolute URL of the request.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/urlRequest\/url.html"
    },
    {
        "displayText": "event.time",
        "type": "property",
        "description": "Provides an easy way to get the time in milliseconds since the start of the application, from within a touch event listener function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/time.html"
    },
    {
        "displayText": "event.didComplete",
        "type": "property",
        "description": "If the operation completed, this is true, false otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/fbconnect\/didComplete.html"
    },
    {
        "displayText": "event.expiration",
        "type": "property",
        "description": "Returns a number that corresponds to the date\/time when the cached license response expires. For a strict policy, this is the time when the event happens.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/licensing\/expiration.html"
    },
    {
        "displayText": "event.isError",
        "type": "property",
        "description": "If a network error occurred, this property is true; otherwise false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/isError.html"
    },
    {
        "displayText": "event.response",
        "type": "property",
        "description": "A string containing the response from the server, or in the case of response output directed to a file, a table indicating the filename and baseDirectory for the output file.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/response.html"
    },
    {
        "displayText": "event.token",
        "type": "property",
        "description": "This is the access token needed for certain Facebook API calls. It is only present when the event.phase is \"login\". It is nil otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/fbconnect\/token.html"
    },
    {
        "displayText": "event.type",
        "type": "property",
        "description": "The type of urlRequest event that indicates the action associated with the request. Values include:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/urlRequest\/type.html"
    },
    {
        "displayText": "event.data",
        "type": "property",
        "description": "When a \"gameNetwork\" event needs to return information, the data field is where the information is provided. This type will change based on the specific operation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gameNetwork\/data.html"
    },
    {
        "displayText": "event.errorCode",
        "type": "property",
        "description": "If an error occurs, this will be set with an integer returning the error code of the error. If there is no error, this field is nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/video\/errorCode.html"
    },
    {
        "displayText": "event.errorMessage",
        "type": "property",
        "description": "If an error occurs, this string describes the error that occurred. If there is no error, this property is nil.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/video\/errorMessage.html"
    },
    {
        "displayText": "event.localPlayerScore",
        "type": "property",
        "description": "For specific Game Center request operations, this returns a table containing values that represent the local player's score.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gameNetwork\/localPlayerScore.html"
    },
    {
        "displayText": "event.provider",
        "type": "property",
        "description": "The name of the licensing provider, for example \"google\", that was used in the licensing.init() call.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/licensing\/provider.html"
    },
    {
        "displayText": "event.xRotation",
        "type": "property",
        "description": "The rotation rate around the device's x-axis in radians per second.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gyroscope\/xRotation.html"
    },
    {
        "displayText": "event.yRotation",
        "type": "property",
        "description": "The rotation rate around the device's y-axis in radians per second.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gyroscope\/yRotation.html"
    },
    {
        "displayText": "event.zRotation",
        "type": "property",
        "description": "The rotation rate around the device's z-axis in radians per second.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/gyroscope\/zRotation.html"
    },
    {
        "displayText": "event.geographic",
        "type": "property",
        "description": "Provides the heading in degrees (clockwise) relative to the geographic North Pole, sometimes known as true North.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/heading\/geographic.html"
    },
    {
        "displayText": "event.magnetic",
        "type": "property",
        "description": "Provides the heading in degrees (clockwise) relative to the magnetic North Pole.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/heading\/magnetic.html"
    },
    {
        "displayText": "event.connectionStateChanged",
        "type": "property",
        "description": "Will be set to true if the input device's connection with the system has changed, such as from \"connected\" to \"disconnected\" or \"disconnected\" to \"connected\". You can easily access the input device's current connection state by accessing the event.device.connectionState property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/inputDeviceStatus\/connectionStateChanged.html"
    },
    {
        "displayText": "event.reconfigured",
        "type": "property",
        "description": "Will be set to true if the input device has been reconfigured, such as when axis inputs have been added or removed from the device, the displayName has been changed, or other configuration changes. You can access the device whose configuration has been changed via the event.device property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/inputDeviceStatus\/reconfigured.html"
    },
    {
        "displayText": "event.descriptor",
        "type": "property",
        "description": "Provides a human-readable string (assigned by Corona) which can be used to uniquely identify one key belonging to a device. This descriptor string is intended to be used by applications that set up key and axis bindings with a particular device, such as the first joystick connected to the system.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/descriptor.html"
    },
    {
        "displayText": "event.isAltDown",
        "type": "property",
        "description": "Indicates if the Alt key was held down at the time the key event occurred. Note that this property is guaranteed to return true if the key that was just pressed down was either leftAlt or rightAlt.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/isAltDown.html"
    },
    {
        "displayText": "event.isCommandDown",
        "type": "property",
        "description": "Indicates if the Command\/\u2318 key was held down at the time the key event occurred.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/isCommandDown.html"
    },
    {
        "displayText": "event.isCtrlDown",
        "type": "property",
        "description": "Indicates if the Control key was held down at the time the key event occurred. Note that this property is guaranteed to return true if the key that was just pressed down was leftCtrl or rightCtrl.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/isCtrlDown.html"
    },
    {
        "displayText": "event.isShiftDown",
        "type": "property",
        "description": "Indicates if the Shift key was held down or if the Caps Lock key was on at the time the key event occurred. Note that this property is guaranteed to return true if the key that was just pressed down was leftShift, rightShift, or capsLock.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/isShiftDown.html"
    },
    {
        "displayText": "event.keyName",
        "type": "property",
        "description": "The unique string name of the key. Used to identify which key was pressed down or released.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/keyName.html"
    },
    {
        "displayText": "event.nativeKeyCode",
        "type": "property",
        "description": "Provides the key's unique integer ID assigned to it by the operating system.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/key\/nativeKeyCode.html"
    },
    {
        "displayText": "event.errorType",
        "type": "property",
        "description": "If event.isError is true, this contains the type of error: \"configuration\" or \"network\". Returns nil if no error.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/licensing\/errorType.html"
    },
    {
        "displayText": "event.isVerified",
        "type": "property",
        "description": "If the app was verified as being purchased from the provider, returns true. Otherwise returns false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/licensing\/isVerified.html"
    },
    {
        "displayText": "event.accuracy",
        "type": "property",
        "description": "Provides the accuracy of the GPS location in meters. If negative, the latitude and longitude are not valid.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/location\/accuracy.html"
    },
    {
        "displayText": "event.altitude",
        "type": "property",
        "description": "Provides the altitude in meters of the current GPS location.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/location\/altitude.html"
    },
    {
        "displayText": "event.direction",
        "type": "property",
        "description": "The direction the device is traveling in degrees clockwise from true north. If negative, the direction is invalid.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/location\/direction.html"
    },
    {
        "displayText": "event.latitude",
        "type": "property",
        "description": "The latitude in degrees of the mapMarker.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapMarker\/latitude.html"
    },
    {
        "displayText": "event.longitude",
        "type": "property",
        "description": "The longitude in degrees of the marker.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapMarker\/longitude.html"
    },
    {
        "displayText": "event.speed",
        "type": "property",
        "description": "The instantaneous speed of the GPS device in meters per second. Divide the results by 0.447 to get MPH (miles\u00a0per\u00a0hour).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/location\/speed.html"
    },
    {
        "displayText": "event.city",
        "type": "property",
        "description": "The city or town.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/city.html"
    },
    {
        "displayText": "event.cityDetail",
        "type": "property",
        "description": "Additional city information, such as neighborhood.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/cityDetail.html"
    },
    {
        "displayText": "event.countryCode",
        "type": "property",
        "description": "The standard country abbreviation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/countryCode.html"
    },
    {
        "displayText": "event.country",
        "type": "property",
        "description": "The country name.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/country.html"
    },
    {
        "displayText": "event.postalCode",
        "type": "property",
        "description": "The postal code.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/postalCode.html"
    },
    {
        "displayText": "event.region",
        "type": "property",
        "description": "The state, province, or similar region within the country.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/region.html"
    },
    {
        "displayText": "event.regionDetail",
        "type": "property",
        "description": "The region below the state level (for example, the county in the United States).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/regionDetail.html"
    },
    {
        "displayText": "event.street",
        "type": "property",
        "description": "The street name.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/street.html"
    },
    {
        "displayText": "event.streetDetail",
        "type": "property",
        "description": "The street number (or other specifier for location on the street).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapAddress\/streetDetail.html"
    },
    {
        "displayText": "event.request",
        "type": "property",
        "description": "The original input.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapLocation\/request.html"
    },
    {
        "displayText": "event.markerId",
        "type": "property",
        "description": "The id of the marker this event is for.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mapMarker\/markerId.html"
    },
    {
        "displayText": "event.isPrimaryButtonDown",
        "type": "property",
        "description": "Indicates if the mouse's primary button was held down at the time the mouse event occurred.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mouse\/isPrimaryButtonDown.html"
    },
    {
        "displayText": "event.isSecondaryButtonDown",
        "type": "property",
        "description": "Indicates if the mouse's secondary button was held down at the time the mouse event occurred.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mouse\/isSecondaryButtonDown.html"
    },
    {
        "displayText": "event.isMiddleButtonDown",
        "type": "property",
        "description": "Indicates if the mouse's middle button was held down at the time the mouse event occurred.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/mouse\/isMiddleButtonDown.html"
    },
    {
        "displayText": "event.requestId",
        "type": "property",
        "description": "A reference to the request that corresponds to the event. This value is the same as the value returned from the call to network.request(), network.upload(), or network.download().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/requestId.html"
    },
    {
        "displayText": "event.status",
        "type": "property",
        "description": "The status code returned from the server. For example, on a successful request this will typically be 200.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/status.html"
    },
    {
        "displayText": "event.responseHeaders",
        "type": "property",
        "description": "A table providing response header values with string keys.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/responseHeaders.html"
    },
    {
        "displayText": "event.responseType",
        "type": "property",
        "description": "The encoding type of the response, which will be one of the following values:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/responseType.html"
    },
    {
        "displayText": "event.bytesTransferred",
        "type": "property",
        "description": "This value indicates the number of bytes processed by the given request.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/bytesTransferred.html"
    },
    {
        "displayText": "event.bytesEstimated",
        "type": "property",
        "description": "This value indicates the number of bytes expected to be processed by the given request, if known, otherwise it will be -1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkRequest\/bytesEstimated.html"
    },
    {
        "displayText": "event.isReachableViaWiFi",
        "type": "property",
        "description": "This property is true if the requested host is reachable via WiFi.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isReachableViaWiFi.html"
    },
    {
        "displayText": "event.isReachableViaCellular",
        "type": "property",
        "description": "This property is true if the host is reachable through the cellular network.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isReachableViaCellular.html"
    },
    {
        "displayText": "event.address",
        "type": "property",
        "description": "The host associated with this network status change event. This information is potentially useful if you are monitoring multiple hosts with the same callback function and need to distinguish between them.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/address.html"
    },
    {
        "displayText": "event.isInteractionRequired",
        "type": "property",
        "description": "This property is true if the user will be required to interact with the application to (re)connect to the host, for example if the user will need to enter a password.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isInteractionRequired.html"
    },
    {
        "displayText": "event.isConnectionOnDemand",
        "type": "property",
        "description": "This property is true if the connection will come up automatically, false otherwise.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isConnectionOnDemand.html"
    },
    {
        "displayText": "event.isReachable",
        "type": "property",
        "description": "This property is true if the specified host is reachable.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isReachable.html"
    },
    {
        "displayText": "event.isConnectionRequired",
        "type": "property",
        "description": "This property is true if the connection is up.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/networkStatus\/isConnectionRequired.html"
    },
    {
        "displayText": "event.alert",
        "type": "property",
        "description": "String value representing the message displayed.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/notification\/alert.html"
    },
    {
        "displayText": "event.applicationState",
        "type": "property",
        "description": "String indicating the state of the application when the notification was received.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/notification\/applicationState.html"
    },
    {
        "displayText": "event.badge",
        "type": "property",
        "description": "Number representing the badge count (iOS only).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/notification\/badge.html"
    },
    {
        "displayText": "event.custom",
        "type": "property",
        "description": "A table that was provided at the time the notification was scheduled or pushed.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/notification\/custom.html"
    },
    {
        "displayText": "event.sound",
        "type": "property",
        "description": "String value representing a sound file, i.e. \"alarm.caf\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/notification\/sound.html"
    },
    {
        "displayText": "event.delta",
        "type": "property",
        "description": "Provides the angular difference (in degrees) between the ending and starting orientation. Returns 0 if the two orientations lie in different planes.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/orientation\/delta.html"
    },
    {
        "displayText": "event.object",
        "type": "property",
        "description": "Reference to the object involved in the particle collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/object.html"
    },
    {
        "displayText": "event.element",
        "type": "property",
        "description": "The element index of the event.object which was hit in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/element.html"
    },
    {
        "displayText": "event.particleSystem",
        "type": "property",
        "description": "Reference to the parent ParticleSystem of the particle involved in the collision.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/particleSystem.html"
    },
    {
        "displayText": "event.normalX",
        "type": "property",
        "description": "The collision normal's x direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/normalX.html"
    },
    {
        "displayText": "event.normalY",
        "type": "property",
        "description": "The collision normal's y direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/particleCollision\/normalY.html"
    },
    {
        "displayText": "event.force",
        "type": "property",
        "description": "The direct force of the post-collision as reported with the current event.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/postCollision\/force.html"
    },
    {
        "displayText": "event.friction",
        "type": "property",
        "description": "The frictional force of the post-collision as reported with the current event.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/postCollision\/friction.html"
    },
    {
        "displayText": "event.invalidProducts",
        "type": "property",
        "description": "When store.loadProducts() returns its requested list of products, any products you requested that are not available for sale will be returned in a array. You can access the array of invalid products through the event.invalidProducts property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/productList\/invalidProducts.html"
    },
    {
        "displayText": "event.products",
        "type": "property",
        "description": "When store.loadProducts() returns its requested list of products, you can access the array of product information through the event.products property.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/productList\/products.html"
    },
    {
        "displayText": "event.transaction",
        "type": "property",
        "description": "The table event.transaction supports the following read-only properties:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/storeTransaction\/transaction.html"
    },
    {
        "displayText": "event.numTaps",
        "type": "property",
        "description": "The number of taps on the screen.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/tap\/numTaps.html"
    },
    {
        "displayText": "event.source",
        "type": "property",
        "description": "A reference to the timer registered to send the event. This may be useful if you have multiple timers calling the same listener.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/timer\/source.html"
    },
    {
        "displayText": "event.count",
        "type": "property",
        "description": "The number of times that the timer has fired the listener. This is useful if you registered the timer to fire multiple times.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/timer\/count.html"
    },
    {
        "displayText": "event.id",
        "type": "property",
        "description": "A unique identifier of the chosen touch that enables you to distinguish between multiple touches across different touch events. This uniquely identifies a given finger touching the screen as that touch changes state, for example as the touch generates new touch events such as \"moved\", \"ended\", etc.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/id.html"
    },
    {
        "displayText": "event.xStart",
        "type": "property",
        "description": "The x position of the touch from the \"began\" phase of the touch sequence.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/xStart.html"
    },
    {
        "displayText": "event.yStart",
        "type": "property",
        "description": "The y position of the touch from the \"began\" phase of the touch sequence.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/touch\/yStart.html"
    },
    {
        "displayText": "event.stackTrace",
        "type": "property",
        "description": "The stackTrace at which the last runtime error occurred formatted into a string.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/unhandledError\/stackTrace.html"
    },
    {
        "displayText": "event.newCharacters",
        "type": "property",
        "description": "New characters that were typed in for the event. This property is only available during the \"editing\" phase of userInput events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/newCharacters.html"
    },
    {
        "displayText": "event.numDeleted",
        "type": "property",
        "description": "The number of characters which were deleted. This property is only available during the \"editing\" phase of userInput events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/numDeleted.html"
    },
    {
        "displayText": "event.oldText",
        "type": "property",
        "description": "The characters present in the TextField or TextBox before any new characters were typed for the event. This property is only available during the \"editing\" phase of userInput events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/oldText.html"
    },
    {
        "displayText": "event.startPosition",
        "type": "property",
        "description": "The position where the cursor was when the event took place. This property is only available during the \"editing\" phase of userInput events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/startPosition.html"
    },
    {
        "displayText": "event.text",
        "type": "property",
        "description": "The text content of the TextField or TextBox on an event.phase of \"began\" or \"editing\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/event\/userInput\/text.html"
    },
    {
        "displayText": "fill.rotation",
        "type": "property",
        "description": "Defines the rotation of the BitmapPaint image.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/BitmapPaint\/rotation.html"
    },
    {
        "displayText": "fill.scaleX",
        "type": "property",
        "description": "Defines the x scale factor of the BitmapPaint image, for example, 1 equals 100%, 0.5 equals 50%, and 2 equals 200%.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/BitmapPaint\/scaleX.html"
    },
    {
        "displayText": "fill.scaleY",
        "type": "property",
        "description": "Defines the y scale factor of the BitmapPaint image, for example, 1 equals 100%, 0.5 equals 50%, and 2 equals 200%.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/BitmapPaint\/scaleY.html"
    },
    {
        "displayText": "fill.x",
        "type": "property",
        "description": "This value is used to offset a repeating bitmap fill by a ratio of its width.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/BitmapPaint\/x.html"
    },
    {
        "displayText": "fill.y",
        "type": "property",
        "description": "This value is used to offset a repeating bitmap fill by a ratio of its height.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/BitmapPaint\/y.html"
    },
    {
        "displayText": "object.angularDamping",
        "type": "property",
        "description": "The numerical value for how much the body's rotation should be damped. The default is zero (0). There is no minimum or maximum value \u2014 just adjust to get the desired results.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/angularDamping.html"
    },
    {
        "displayText": "object.angularVelocity",
        "type": "property",
        "description": "The numerical value of the current angular (rotational) velocity, in degrees per second. There is no minimum or maximum value \u2014 just adjust to get the desired results.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/angularVelocity.html"
    },
    {
        "displayText": "object.bodyType",
        "type": "property",
        "description": "A string value for the type of physical body being simulated. Possible values include:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/bodyType.html"
    },
    {
        "displayText": "object.gravityScale",
        "type": "property",
        "description": "Use the gravityScale property to adjust the gravity on a single body. For example, setting it to 0 makes the body float (no\u00a0gravity). The default value is 1.0 which means the body will behave under the normal simulated gravity.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/gravityScale.html"
    },
    {
        "displayText": "object.isAwake",
        "type": "property",
        "description": "A boolean for the body's current \"awake\" state. By default, all bodies automatically \"sleep\" when nothing interacts with them for a couple of seconds. At this point, they stop being simulated until something like a collision wakes them up. The isAwake property can either fetch a body's current state or forcibly wake it up.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isAwake.html"
    },
    {
        "displayText": "object.isBodyActive",
        "type": "property",
        "description": "Used to set or get the body's current active state. Inactive bodies are not destroyed but they are removed from the physics simulation and cease to interact with other bodies.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isBodyActive.html"
    },
    {
        "displayText": "object.isBullet",
        "type": "property",
        "description": "A boolean for whether the body should be treated as a \"bullet\". Bullets are subject to continuous collision detection rather than periodic collision detection at world time steps. This is more computationally expensive but it can prevent fast-moving objects from passing through solid barriers. The default is false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isBullet.html"
    },
    {
        "displayText": "object.isFixedRotation",
        "type": "property",
        "description": "A boolean for whether the rotation of the body should be locked, even if the body is under load or subjected to off-center forces. The default is false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isFixedRotation.html"
    },
    {
        "displayText": "object.isSensor",
        "type": "property",
        "description": "A sensor is a fixture that detects collisions but does not produce a physical response. Sensors do not generate contact points.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isSensor.html"
    },
    {
        "displayText": "object.isSleepingAllowed",
        "type": "property",
        "description": "A boolean for whether a body is allowed to \"sleep\". The default is true.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/isSleepingAllowed.html"
    },
    {
        "displayText": "object.linearDamping",
        "type": "property",
        "description": "The numerical value for how much the body's linear motion is damped. The default is zero (0).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/linearDamping.html"
    },
    {
        "displayText": "object.mass",
        "type": "property",
        "description": "A read-only value representing the body's mass.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Body\/mass.html"
    },
    {
        "displayText": "object.publisherId",
        "type": "property",
        "description": "The name of the publisher.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/CoronaLibrary\/publisherId.html"
    },
    {
        "displayText": "object.revision",
        "type": "property",
        "description": "The revision number of the library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/CoronaLibrary\/revision.html"
    },
    {
        "displayText": "object.version",
        "type": "property",
        "description": "The version number of the library.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/CoronaLibrary\/version.html"
    },
    {
        "displayText": "object.alpha",
        "type": "property",
        "description": "This property represents the alpha value of a display object. Use it to set or retrieve the object's opacity. A value of 0 is transparent and 1.0 is fully opaque.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/alpha.html"
    },
    {
        "displayText": "object.anchorX",
        "type": "property",
        "description": "This property allows you to control the alignment of the object along the x direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/anchorX.html"
    },
    {
        "displayText": "object.anchorY",
        "type": "property",
        "description": "This property allows you to control the alignment of the object along the y direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/anchorY.html"
    },
    {
        "displayText": "object.blendMode",
        "type": "property",
        "description": "Allows you to change the blend mode on a specific object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/blendMode.html"
    },
    {
        "displayText": "object.contentBounds",
        "type": "property",
        "description": "A read-only table with properties xMin, xMax, yMin, yMax that represent the boundaries of a display object, in content coordinates.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/contentBounds.html"
    },
    {
        "displayText": "object.contentHeight",
        "type": "property",
        "description": "The read-only height of the object in content coordinates. This is similar to object.height except that its value is affected by y scaling and rotation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/contentHeight.html"
    },
    {
        "displayText": "object.contentWidth",
        "type": "property",
        "description": "The read-only width of the object in content coordinates. This is similar to object.width except that its value is affected by x scaling and rotation.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/contentWidth.html"
    },
    {
        "displayText": "object.height",
        "type": "property",
        "description": "Retrieve or change the height of a display object. For text objects, this property can be used to get (but\u00a0not\u00a0set) the height.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/height.html"
    },
    {
        "displayText": "object.isHitTestMasked",
        "type": "property",
        "description": "Limits touch events to the masked portion of the object. This property can be read or set.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/isHitTestMasked.html"
    },
    {
        "displayText": "object.isHitTestable",
        "type": "property",
        "description": "Allows an object to continue to receive hit events even if it is not visible. If true, objects will receive hit events regardless of visibility; if false, events are only sent to visible objects. Defaults to false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/isHitTestable.html"
    },
    {
        "displayText": "object.isVisible",
        "type": "property",
        "description": "Controls whether the object is visible on the screen. The property is also readable. The default is true.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/isVisible.html"
    },
    {
        "displayText": "object.maskRotation",
        "type": "property",
        "description": "Retrieve or set the rotation of the display object's corresponding mask object, if one exists.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/maskRotation.html"
    },
    {
        "displayText": "object.maskScaleX",
        "type": "property",
        "description": "Retrieve or set the x-scale factor for the display object's corresponding mask object, if any.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/maskScaleX.html"
    },
    {
        "displayText": "object.maskScaleY",
        "type": "property",
        "description": "Retrieves or sets the y-scale factor for the display object's corresponding mask object, if any.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/maskScaleY.html"
    },
    {
        "displayText": "object.maskX",
        "type": "property",
        "description": "Retrieve or set the x position of the mask applied to the display object using object:setMask().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/maskX.html"
    },
    {
        "displayText": "object.maskY",
        "type": "property",
        "description": "Retrieve or set the y position of the mask applied to the display object using object:setMask().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/maskY.html"
    },
    {
        "displayText": "object.parent",
        "type": "property",
        "description": "A read-only property that returns the object's parent.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/parent.html"
    },
    {
        "displayText": "object.rotation",
        "type": "property",
        "description": "Change or retrieve the rotation of an object. The rotation occurs around the object's anchor point.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/rotation.html"
    },
    {
        "displayText": "object.width",
        "type": "property",
        "description": "Retrieve or change the width of a display object. For text objects, this property can be used to get (but\u00a0not\u00a0set) the width.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/width.html"
    },
    {
        "displayText": "object.x",
        "type": "property",
        "description": "Specifies the x position (in local coordinates) of the object relative to its parent \u2014 specifically, the x position of the object's anchorX point relative to its parent. Changing this value will move the object in the x direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/x.html"
    },
    {
        "displayText": "object.xScale",
        "type": "property",
        "description": "Retrieve or change the scale of the object in the x direction. The scaling occurs around the object's anchor point.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/xScale.html"
    },
    {
        "displayText": "object.y",
        "type": "property",
        "description": "Specifies the y position (in local coordinates) of the object relative to its parent \u2014 specifically, the y position of the object's anchorY point relative to its parent. Changing this value will move the object in the y direction.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/y.html"
    },
    {
        "displayText": "object.yScale",
        "type": "property",
        "description": "Retrieve or change the scale of the object in the y direction. The scaling occurs around the object's anchor point.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/yScale.html"
    },
    {
        "displayText": "object._defined",
        "type": "property",
        "description": "Read-only property that provides the file and line number where the object was created.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/defined.html"
    },
    {
        "displayText": "object._lastChange",
        "type": "property",
        "description": "Read-only property that provides the file and line number of the last change to any of the object's properties.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/lastChange.html"
    },
    {
        "displayText": "object._properties",
        "type": "property",
        "description": "Read-only property that provides a view into all of the object's property values.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/DisplayObject\/properties.html"
    },
    {
        "displayText": "object.numChildren",
        "type": "property",
        "description": "Retrieve the number of children in a group. You access the children by integer (whole number) index.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/GroupObject\/numChildren.html"
    },
    {
        "displayText": "fill.frame",
        "type": "property",
        "description": "Defines the image sheet frame index used for the ImageSheetPaint.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ImageSheetPaint\/frame.html"
    },
    {
        "displayText": "object.accuracy",
        "type": "property",
        "description": "The +\/\u2212 accuracy of the data provided by the axis input. This value will always be greater than or equal to 0. For example, if the accuracy is 0.01, an axis value of 0.5 is accurate between 0.49 and 0.51.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputAxis\/accuracy.html"
    },
    {
        "displayText": "object.descriptor",
        "type": "property",
        "description": "Provides a unique human readable string assigned by Corona used to uniquely identify the device. This descriptor string is intended to be used by applications that set up key bindings with a particular device, such as the first joystick connected to the system.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/descriptor.html"
    },
    {
        "displayText": "object.maxValue",
        "type": "property",
        "description": "Indicates the maximum value that an axis input event will provide. This property and the object.minValue property are needed to make sense of the raw data received by an axis because it will indicate how far that axis has been moved relative to its range.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputAxis\/maxValue.html"
    },
    {
        "displayText": "object.minValue",
        "type": "property",
        "description": "Indicates the minimum value that an axis input event will provide. This property and the object.maxValue property are needed to make sense of the raw data received by an axis because it will indicate how far that axis has been moved relative to its range.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputAxis\/minValue.html"
    },
    {
        "displayText": "object.number",
        "type": "property",
        "description": "The number assigned to an input device's axis. This number is based on the number of axes found on one input device. For example, if an input device has 4 axes, then they will be assigned numbers 1, 2, 3, and 4 in the order that they were found. You can use this number to uniquely identify an axis belonging to one input device. This axis number can be used as an index with the array returned by its input device's getAxes() function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputAxis\/number.html"
    },
    {
        "displayText": "object.type",
        "type": "property",
        "description": "A string that specifies what kind of device is connected to the system. Possible values are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/type.html"
    },
    {
        "displayText": "object.androidDeviceId",
        "type": "property",
        "description": "The unique integer ID assigned to the input device by Android.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/androidDeviceId.html"
    },
    {
        "displayText": "object.canVibrate",
        "type": "property",
        "description": "Determines if the input device supports vibration\/rumble feedback. This is a features that usually gamepads support.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/canVibrate.html"
    },
    {
        "displayText": "object.connectionState",
        "type": "property",
        "description": "Indicates the input device's current connection state with the system such as \"connected\", \"disconnected\", etc.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/connectionState.html"
    },
    {
        "displayText": "object.displayName",
        "type": "property",
        "description": "The name that was assigned to the input device by the system or end-user. Can be used to display the name of the device to the end-user, such as on a key\/button binding screen.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/displayName.html"
    },
    {
        "displayText": "object.isConnected",
        "type": "property",
        "description": "Determines if the input device is currently connected to the system and can provide input events.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/isConnected.html"
    },
    {
        "displayText": "object.permanentId",
        "type": "property",
        "description": "Provides the input device's unique string ID which will be consistent between reboots. That is, the ID for the input device will not change after rebooting the system. This means that this ID can be saved to file and used to set up key bindings with a very specific input device.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/InputDevice\/permanentId.html"
    },
    {
        "displayText": "object.anchorSegments",
        "type": "property",
        "description": "This boolean property controls whether LineObjects take anchorX and anchorY into account. This value is false by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/LineObject\/anchorSegments.html"
    },
    {
        "displayText": "object.isLocationVisible",
        "type": "property",
        "description": "A read-only Boolean value indicating whether the user's current location is visible within the area currently displayed on the map. This is based on an approximation, so it may be that the value is true when the user's position is slightly offscreen.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Map\/isLocationVisible.html"
    },
    {
        "displayText": "object.isScrollEnabled",
        "type": "property",
        "description": "A Boolean that determines whether users can scroll the map by hand. Default is true. Set to false to prevent users from scrolling the map. Note that a map can still be scrolled\/panned via the object:setCenter() and object:setRegion() functions, even if this property is false. This is useful if you want map movement to be controlled by the program, not the user.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Map\/isScrollEnabled.html"
    },
    {
        "displayText": "object.isZoomEnabled",
        "type": "property",
        "description": "A boolean that determines whether users may use pinch\/zoom gestures to zoom the map. Default is true. Set to false to prevent users from zooming the map. Note that a map can still be zoomed via the object:setRegion() function, even when this property is set to false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Map\/isZoomEnabled.html"
    },
    {
        "displayText": "object.mapType",
        "type": "property",
        "description": "A string that specifies the type of map display. Possible values are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Map\/mapType.html"
    },
    {
        "displayText": "fill.r",
        "type": "property",
        "description": "The red channel value ranging from 0 to 1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/r.html"
    },
    {
        "displayText": "fill.g",
        "type": "property",
        "description": "The green channel value ranging from 0 to 1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/g.html"
    },
    {
        "displayText": "fill.b",
        "type": "property",
        "description": "The blue channel value ranging from 0 to 1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/b.html"
    },
    {
        "displayText": "fill.a",
        "type": "property",
        "description": "The alpha channel value ranging from 0 to 1.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/a.html"
    },
    {
        "displayText": "fill.blendEquation",
        "type": "property",
        "description": "The blend equation per the OpenGL-ES 2 specification.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/blendEquation.html"
    },
    {
        "displayText": "fill.blendMode",
        "type": "property",
        "description": "Allows you to change the blend mode on a specific object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/blendMode.html"
    },
    {
        "displayText": "fill.effect",
        "type": "property",
        "description": "Apply shader effects to an object, including filters, generators (procedurally-generated textures), and composites (multitexturing).",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Paint\/effect.html"
    },
    {
        "displayText": "object.imageRadius",
        "type": "property",
        "description": "This numerical property controls the radius of the particle image, in content units.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/imageRadius.html"
    },
    {
        "displayText": "object.particleCount",
        "type": "property",
        "description": "This read-only numerical property represents the number of particles alive.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleCount.html"
    },
    {
        "displayText": "object.particleDamping",
        "type": "property",
        "description": "This numerical property controls the damping of particles.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleDamping.html"
    },
    {
        "displayText": "object.particleDensity",
        "type": "property",
        "description": "This numerical property controls the density of particles. This value is 1.0 by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleDensity.html"
    },
    {
        "displayText": "object.particleDestructionByAge",
        "type": "property",
        "description": "This boolean property controls the destruction of particles based on their age. This value is true by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleDestructionByAge.html"
    },
    {
        "displayText": "object.particleGravityScale",
        "type": "property",
        "description": "This numerical property controls the scaling of gravity. This value is 1.0 by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleGravityScale.html"
    },
    {
        "displayText": "object.particleMass",
        "type": "property",
        "description": "Read-only numerical property representing the mass of a single particle, in kilograms, within a ParticleSystem.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleMass.html"
    },
    {
        "displayText": "object.particleMaxCount",
        "type": "property",
        "description": "This numerical property controls the maximum number of particles. This value is 0 by default, indicating no maximum limit.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleMaxCount.html"
    },
    {
        "displayText": "object.particlePaused",
        "type": "property",
        "description": "This boolean property controls pausing of the simulation of particles. This value is false by default, meaning that the simulation should be executed as normal.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particlePaused.html"
    },
    {
        "displayText": "object.particleRadius",
        "type": "property",
        "description": "This numerical property controls the radius of particles. This value is 1.0 by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleRadius.html"
    },
    {
        "displayText": "object.particleStrictContactCheck",
        "type": "property",
        "description": "This boolean property controls the strict particle\/body contact check. This value is false by default.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ParticleSystem\/particleStrictContactCheck.html"
    },
    {
        "displayText": "PhysicsContact.bounce",
        "type": "property",
        "description": "Overrides the normal bounce\/restitution of the PhysicsContact. This is typically read or set inside the preCollision or collision event listener.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/PhysicsContact\/bounce.html"
    },
    {
        "displayText": "PhysicsContact.friction",
        "type": "property",
        "description": "Overrides the normal friction of the PhysicsContact. This is typically read or set inside the preCollision or collision event listener.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/PhysicsContact\/friction.html"
    },
    {
        "displayText": "PhysicsContact.isEnabled",
        "type": "property",
        "description": "Enable or disable the collision associated with this contact. This is typically used inside a preCollision event listener and may be used to construct one-sided platforms that the character can jump vertically through, but only from below.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/PhysicsContact\/isEnabled.html"
    },
    {
        "displayText": "PhysicsContact.isTouching",
        "type": "property",
        "description": "Boolean property (read-only) indicating whether the two objects associated with this PhysicsContact are touching.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/PhysicsContact\/isTouching.html"
    },
    {
        "displayText": "object.segmentLabel",
        "type": "property",
        "description": "The read-only label of the currently-selected segment on a Segmented Control object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SegmentedControlWidget\/segmentLabel.html"
    },
    {
        "displayText": "object.segmentNumber",
        "type": "property",
        "description": "The read-only segment number of the currently-selected segment on a Segmented Control object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SegmentedControlWidget\/segmentNumber.html"
    },
    {
        "displayText": "object.fill",
        "type": "property",
        "description": "For object fills, Corona uses the concept of paint. The fill of a shape refers to the interior area of the shape. When you assign a paint to a fill, you control how the interior area of the shape is rendered.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ShapeObject\/fill.html"
    },
    {
        "displayText": "object.path",
        "type": "property",
        "description": "Paths are a property of shapes that let you control the geometry of the shape.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ShapeObject\/path.html"
    },
    {
        "displayText": "object.stroke",
        "type": "property",
        "description": "For object strokes, Corona uses the concept of paint. The stroke of a shape refers to the boundary of the shape. When you assign a paint to a stroke, you control how the boundary is rendered.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ShapeObject\/stroke.html"
    },
    {
        "displayText": "object.strokeWidth",
        "type": "property",
        "description": "Sets the stroke width of vector objects, in pixels. Note that stroke widths are broken up to inner and outer parts. The stroke is centered on the boundaries of the object, but when the stroke width is odd, Corona does an integer divide by 2 then a math.floor() on the value. For example, 3 \/ 2 = 1 or 1 \/ 2 = 0. The inner width is set to that value, and the remainder is the outer width. This avoids blurring around the edges of the stroke.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/ShapeObject\/strokeWidth.html"
    },
    {
        "displayText": "object.value",
        "type": "property",
        "description": "A read-only property that represents the current value of the stepper. This value is any number from the stepper's minimum\u00a0value to the stepper's maximum\u00a0value.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/StepperWidget\/value.html"
    },
    {
        "displayText": "object.canvas",
        "type": "property",
        "snippet": "snapshot.canvas",
        "description": "This group is a special offscreen group that enables you to draw on the snapshot's texture without redrawing the objects in snapshot.group.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/canvas.html"
    },
    {
        "displayText": "object.canvasMode",
        "type": "property",
        "snippet": "snapshot.canvasMode",
        "description": "The canvas mode controls what happens to the children of the snapshot's canvas.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/canvasMode.html"
    },
    {
        "displayText": "object.clearColor",
        "type": "property",
        "snippet": "snapshot.clearColor",
        "description": "The clear color controls how the snapshot's texture is cleared when the snapshot is invalidated.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/clearColor.html"
    },
    {
        "displayText": "object.group",
        "type": "property",
        "snippet": "snapshot.group",
        "description": "This group is a special offscreen group that determines what is rendered in the snapshot.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/group.html"
    },
    {
        "displayText": "object.textureFilter",
        "type": "property",
        "snippet": "snapshot.textureFilter",
        "description": "This controls the texture filter mode for the snapshot. See the Texture\u00a0Keys section of display.setDefault() for valid filter values.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/textureFilter.html"
    },
    {
        "displayText": "object.textureWrapX",
        "type": "property",
        "snippet": "snapshot.textureWrapX",
        "description": "This controls the texture wrap in the x direction for the snapshot. See the Texture\u00a0Keys section of display.setDefault() for valid wrap values.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/textureWrapX.html"
    },
    {
        "displayText": "object.textureWrapY",
        "type": "property",
        "snippet": "snapshot.textureWrapY",
        "description": "This controls the texture wrap in the y direction for the snapshot. See the Texture\u00a0Keys section of display.setDefault() for valid wrap values.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SnapshotObject\/textureWrapY.html"
    },
    {
        "displayText": "object.frame",
        "type": "property",
        "description": "A read-only property that represents the currently shown frame index of loaded sequence.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SpriteObject\/frame.html"
    },
    {
        "displayText": "object.isPlaying",
        "type": "property",
        "description": "Returns true if the currently loaded sequence is currently playing; false if it is not.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SpriteObject\/isPlaying.html"
    },
    {
        "displayText": "object.numFrames",
        "type": "property",
        "description": "A read-only property that represents the number of frames in currently loaded sequence.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SpriteObject\/numFrames.html"
    },
    {
        "displayText": "object.sequence",
        "type": "property",
        "description": "A read-only property that returns the name of the currently playing sequence.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SpriteObject\/sequence.html"
    },
    {
        "displayText": "object.timeScale",
        "type": "property",
        "description": "Gets or sets the scale to be applied to the animation time. This is used to control a sprite's animation speed dynamically.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SpriteObject\/timeScale.html"
    },
    {
        "displayText": "object.minimumValue",
        "type": "property",
        "description": "A read-only property that represents the minimum value of the stepper.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/StepperWidget\/minimumValue.html"
    },
    {
        "displayText": "object.maximumValue",
        "type": "property",
        "description": "A read-only property that represents the maximum value of the stepper.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/StepperWidget\/maximumValue.html"
    },
    {
        "displayText": "object.isOn",
        "type": "property",
        "description": "The read-only state of a switch, either true or false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/SwitchWidget\/isOn.html"
    },
    {
        "displayText": "object.align",
        "type": "property",
        "description": "Alignment of text displayed in the input text field. May be set to one of the following strings:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/align.html"
    },
    {
        "displayText": "object.font",
        "type": "property",
        "description": "Gets or sets the native text field's font. May be set to a font object as returned by the native.newFont() function.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/font.html"
    },
    {
        "displayText": "object.hasBackground",
        "type": "property",
        "description": "This is a get\/set property that corresponds to whether or not the background of the WebView is visible or transparent. Default is true.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/WebView\/hasBackground.html"
    },
    {
        "displayText": "object.isEditable",
        "type": "property",
        "description": "Controls whether the text box is editable. Default is false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextBox\/isEditable.html"
    },
    {
        "displayText": "object.isFontSizeScaled",
        "type": "property",
        "description": "Determines which font size units the text field's object.size and object.font properties are measured in.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/isFontSizeScaled.html"
    },
    {
        "displayText": "object.placeholder",
        "type": "property",
        "description": "Native text fields can display optional placeholder text (nil by default). This can provide a \"hint\" as to what the user should enter in the field. If set, the placeholder string is displayed using the same style information (except\u00a0the\u00a0text\u00a0color). The placeholder does not appear once actual text has been input into the field and it does not currently participate in determining the size of the text field.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/placeholder.html"
    },
    {
        "displayText": "object.size",
        "type": "property",
        "description": "Retrieves or sets the text size pertaining to a text object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextObject\/size.html"
    },
    {
        "displayText": "object.text",
        "type": "property",
        "description": "Retrieves or sets the text string of a text object.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextObject\/text.html"
    },
    {
        "displayText": "object.inputType",
        "type": "property",
        "description": "Sets the keyboard type for a native text input field.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/inputType.html"
    },
    {
        "displayText": "object.isSecure",
        "type": "property",
        "description": "Controls whether text in the field is obscured, e.g. passwords. Default is false.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/isSecure.html"
    },
    {
        "displayText": "object.autocorrectionType",
        "type": "property",
        "description": "This iOS-only property controls the type of auto-correction performed. Possible values are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/autocorrectionType.html"
    },
    {
        "displayText": "object.spellCheckingType",
        "type": "property",
        "description": "This iOS-only property controls the type of spell checking behavior. Possible values are:",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextField\/spellCheckingType.html"
    },
    {
        "displayText": "texture.filename",
        "type": "property",
        "description": "Use this property instead of the real file name to create display objects, fills, and use in other places where a real image file name is expected. In these instances, you must also pass texture.baseDir as a parameter \u2014 see the examples below for reference.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextureResource\/filename.html"
    },
    {
        "displayText": "texture.baseDir",
        "type": "property",
        "description": "Use this property instead of the real directory constant to create display objects, fills, and use in other places where a real directory constant is expected. In these instances, you must also pass texture.filename as a parameter \u2014 see the examples below for reference.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextureResource\/baseDir.html"
    },
    {
        "displayText": "texture.type",
        "type": "property",
        "description": "This property indicates the type of texture.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextureResource\/type.html"
    },
    {
        "displayText": "texture.wrapX",
        "type": "property",
        "description": "Indicates the horizontal wrap mode for a texture: \"clampToEdge\", \"repeat\" or \"mirroredRepeat\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextureResourceBitmap\/wrapX.html"
    },
    {
        "displayText": "texture.wrapY",
        "type": "property",
        "description": "Indicates the vertical wrap mode for a texture: \"clampToEdge\", \"repeat\" or \"mirroredRepeat\".",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/TextureResourceBitmap\/wrapY.html"
    },
    {
        "displayText": "object.currentTime",
        "type": "property",
        "description": "The current time position of the video in seconds (read-only). Use this in conjunction with native.newVideo().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Video\/currentTime.html"
    },
    {
        "displayText": "object.isMuted",
        "type": "property",
        "description": "Controls whether the video's audio channel is muted. Use this in conjunction with native.newVideo().",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Video\/isMuted.html"
    },
    {
        "displayText": "object.totalTime",
        "type": "property",
        "description": "The read-only length of the currently loaded video, in seconds. This should be called after the video is ready to play or an inaccurate value might be returned.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/Video\/totalTime.html"
    },
    {
        "displayText": "object.canGoBack",
        "type": "property",
        "description": "Read-only property that will be true if the WebView can go back a web page or false if not.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/WebView\/canGoBack.html"
    },
    {
        "displayText": "object.canGoForward",
        "type": "property",
        "description": "Read-only property that will be true if the WebView can go forward a web page or false if not.",
        "descriptionMoreUrl": "https:\/\/docs.coronalabs.com\/api\/type\/WebView\/canGoForward.html"
    }
]
